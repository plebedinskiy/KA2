//*-
//*- XXX: Скорее всего сохранить обработки для строительного модуля необходимо, потому что в скором времени придется переделывать под них

&НаКлиенте
Процедура НазваниеФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			
			НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаRk", ЭтаФорма);
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выбор файла";
    ДиалогОткрытияФайла.Фильтр = "xls*-файлы(*.xls*)|*.xls*|";
    ДиалогОткрытияФайла.ИндексФильтра = 0;
    ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
    ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;

    НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаМеталлоконструкцийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			
			НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаМеталлоконструкцийRk", ЭтаФорма);
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выбор файла";
    ДиалогОткрытияФайла.Фильтр = "txt-файлы(*.txt)|*.txt|";
    ДиалогОткрытияФайла.ИндексФильтра = 0;
    ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
    ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;

    НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ПередЗакрытиемНаСервере();
	СохранитьНастройкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ПутьКФайлуНаСервере) Тогда
		Файл = Новый Файл(Объект.ПутьКФайлуНаСервере);
		Если Файл.Существует() Тогда
			УдалитьФайлы(Объект.ПутьКФайлуНаСервере);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаRk(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		
        Адрес = ПереданныйФайл.Хранение;
		Объект.НазваниеФайла = ПереданныйФайл.ПолноеИмя;
		
    КонецЦикла;
    
    RkНаСервере(Адрес, "xlsx");

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаRkИмпортНоменклатуры(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		
        Адрес = ПереданныйФайл.Хранение;
		Объект.НазваниеФайлаИмпортаНоменклатурыУПП = ПереданныйФайл.ПолноеИмя;
		
    КонецЦикла;
    
    RkНаСервере(Адрес, "xls");

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаRkИмпортОстатков(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		
        Адрес = ПереданныйФайл.Хранение;
		Объект.НазваниеФайлаИмпортаОстатков = ПереданныйФайл.ПолноеИмя;
		
    КонецЦикла;
    
    RkНаСервере(Адрес, "xls");

КонецПроцедуры
&НаКлиенте
Процедура ОбработатьВыборФайлаМеталлоконструкцийRk(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		
        Адрес = ПереданныйФайл.Хранение;
		Объект.НазваниеФайлаМеталлоконструкций = ПереданныйФайл.ПолноеИмя;
		
    КонецЦикла;
    
    RkНаСервере(Адрес, "txt");

КонецПроцедуры
&НаСервере
Процедура RkНаСервере(Адрес, Расширение)
    
    ФайлДляЗагрузки = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес));
    Объект.ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла(Расширение);
    ФайлДляЗагрузки = ФайлДляЗагрузки.Получить();
    ФайлДляЗагрузки.Записать(Объект.ПутьКФайлуНаСервере);
         
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлМеталлоконструкции(Команда)
	ПрочитатьФайлМеталлоконструкцииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлМеталлоконструкцииНаСервере()
	
	
	НазваниеМеталлоконструкции = "";
	КоличествоМеталлоконструкций = 0;
			
	
	//ПрочитатьФайл
	Текст = Новый ЧтениеТекста(Объект.ПутьКФайлуНаСервере);

	Строка = Текст.ПрочитатьСтроку();
	
	Объект.Металлоконструкции.Очистить();
	МассивСтрокТекущейМеталлоконструкции = Новый Массив;
	ВесТекущейМеталлоконструкции = 0;
	
	Пока Строка <> Неопределено Цикл //строки читаются до символа перевода строки
	
		ОбработаннаяСтрока = УдалитьПовторяющиесяСимволы(Строка, " ");	
		Строка = Текст.ПрочитатьСтроку();
		
		Если ОбработаннаяСтрока = ""  									Тогда Продолжить; КонецЕсли;
		Если СтрНачинаетсяС(ОбработаннаяСтрока, "Всего") 				Тогда Продолжить; КонецЕсли;
		Если СтрНачинаетсяС(ОбработаннаяСтрока, "Марка Деталь Профиль") Тогда Продолжить; КонецЕсли;
		

		

		
		Если СтрНачинаетсяС(ОбработаннаяСтрока, "--------------------") Тогда 
			
			Для Каждого ЭлементМассива из МассивСтрокТекущейМеталлоконструкции Цикл
				ЭлементМассива.ИтоговыйВесМеталлоконструкции = ВесТекущейМеталлоконструкции; 
			КонецЦикла;
			
			МассивСтрокТекущейМеталлоконструкции.Очистить();
			Продолжить; 
		КонецЕсли;
		МассивИзОбработаннойСтроки = СтрРазделить(ОбработаннаяСтрока, " ");
		Если СтрНачинаетсяС(ОбработаннаяСтрока, "на сварные швы") Тогда 
			
			ВесТекущейМеталлоконструкции = МассивИзОбработаннойСтроки[5];
			Продолжить; 
		КонецЕсли;
		
		Если МассивИзОбработаннойСтроки.Количество() < 2 Тогда
			
			ВесТекущейМеталлоконструкции = МассивИзОбработаннойСтроки[0];
			Продолжить; 
		КонецЕсли;		
		Если МассивИзОбработаннойСтроки.Количество() = 3 Тогда 
			НазваниеМеталлоконструкции 		= МассивИзОбработаннойСтроки[1] + " " + МассивИзОбработаннойСтроки[0];
			КоличествоМеталлоконструкций 	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтрЗаменить(МассивИзОбработаннойСтроки[2], "(шт.)", ""));
			Продолжить;
		КонецЕсли;
		
			
		СтрокаДляМеталлоконструкции 							 = Объект.Металлоконструкции.Добавить();
		СтрокаДляМеталлоконструкции.НазваниеМеталлоконструкции 	 = НазваниеМеталлоконструкции;
		СтрокаДляМеталлоконструкции.КоличествоМеталлоконструкций = КоличествоМеталлоконструкций; 
		СтрокаДляМеталлоконструкции.НазваниеМатериала			 = ПреобразоватьНазваниеМатериала(МассивИзОбработаннойСтроки); 
		СтрокаДляМеталлоконструкции.Количество 					 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(МассивИзОбработаннойСтроки[2]);
		СтрокаДляМеталлоконструкции.Длина 						 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(МассивИзОбработаннойСтроки[3]);
		СтрокаДляМеталлоконструкции.Сталь 						 = МассивИзОбработаннойСтроки[4];
		СтрокаДляМеталлоконструкции.ВесОдной 					 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(МассивИзОбработаннойСтроки[5]);
		СтрокаДляМеталлоконструкции.ВесВсех 					 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(МассивИзОбработаннойСтроки[6]);
		
		
		МассивСтрокТекущейМеталлоконструкции.Добавить(СтрокаДляМеталлоконструкции);
		
		
	КонецЦикла;


	ОбработатьДанныеСоответствияПоНоменклатуреМеталлоконструкций(); 


КонецПроцедуры

&НаСервере
Функция ПреобразоватьНазваниеМатериала(МассивИзОбработаннойСтроки)
	
	Если СтрНачинаетсяС(МассивИзОбработаннойСтроки[1], "-") Тогда
		СтрокаРазмеров = Прав(МассивИзОбработаннойСтроки[1],СтрДлина(МассивИзОбработаннойСтроки[1]) - 1);
		МассивИзСтрокиРазмеров = СтрРазделить(СтрокаРазмеров, "х");
		Название = "Лист металла " + МассивИзСтрокиРазмеров[0] + " мм";
	Иначе
		Название = МассивИзОбработаннойСтроки[1]  
	КонецЕсли;
	
	Возврат Название + ?(МассивИзОбработаннойСтроки[4] = "C345-3", " (09Г2С)", "");

КонецФункции

&НаСервере
Функция УдалитьПовторяющиесяСимволы(Значение, УдаляемыйСимвол)
	
	Значение = СокрЛП(Значение);
	Значение = СтрЗаменить(Значение, "   ", " ");
	Значение = СтрЗаменить(Значение, "  ", " ");
	Значение = СтрЗаменить(Значение, "   ", " ");
	Значение = СтрЗаменить(Значение, "  ", " ");
	
	Возврат Значение;
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	
	//Отказ = ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере();
	Если НЕ ЗначениеЗаполнено(Объект.КодПроекта) Тогда
	
		Сообщить("Укажите код проекта!");
		Возврат;
		
	КонецЕсли;
	ТабличныйДокумент = ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере();
	
	ТабличныйДокумент.Показать();
	
	//Если НЕ Отказ Тогда
		УдалитьФайлы(Объект.ПутьКФайлуНаСервере);
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервереДляКА2();
	
	//*-Эта схема будет использоваться при включении модуля, а пока 
	Возврат;
	//@skip-warning
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМеталлоконструкций(Команда)
	
	Если НЕ ПодтверждениеДействий Тогда
		Сообщить("Подтвердите корректность настроек во вкладке Настройки");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьМеталлоконструкцийНаСервере();
	
	ПодтверждениеДействий = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМеталлоконструкцийНаСервере()
	
	Перем Спецификация;
	Перем МеталлоконструкцияСсылка;
	Перем ЭтапСпецификации;
	
	МеталлоконструкцияСсылка = Справочники.Номенклатура.ПустаяСсылка();
	
	ЭтоУспех = Истина;
	
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияРеквизитовВНастройкеДляМеталлоконструкций(ЭтоУспех);
	
	Если НЕ ЭтоУспех Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка	
	    
		ОбщийВесГП = 0;
		ОбщийВесМеталлолома = 0;
		ВесПрошлойМеталлоконструкции = 0;
		ПрошлоеНазваниеМеталлоконструкции = "";
		КоличествоПрошлойМеталлоконструкции = 0;
		ЗаполнитьНоменклатуруМПЗВСоответствии();
		//*- дополним соответствие на вновьсозданное
		ОбработатьДанныеСоответствияПоНоменклатуреМеталлоконструкций();
		ТЗ_Металлоконструкций = ВернутьТЗМеталлоконструкцийССоответствиемНоменклатур();
		Если ТЗ_Металлоконструкций.Количество() = 0 Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		//*- Создать новый заказ,
		ЗаказДокумент = СоздатьИВернутьДокументЗаказКлиента();
				
		Для Каждого СтрокаИзМеталлоконструкций Из ТЗ_Металлоконструкций Цикл
			
			Если НЕ СтрокаИзМеталлоконструкций.НазваниеМеталлоконструкции = ПрошлоеНазваниеМеталлоконструкции Тогда
				
				Если НЕ ПрошлоеНазваниеМеталлоконструкции = "" Тогда
					СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка 	= МеталлоконструкцияСсылка;
					СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций = КоличествоПрошлойМеталлоконструкции;

					ЕдиницаИзмерения = СоздатьИВернутьИндивидуальнуюЕдиницуИзмерения(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП,ВесПрошлойМеталлоконструкции);
					ВключитьВВозвратныеОтходыСпецификацииНоменклатуруМПЗ(Спецификация, СтрокаИзМеталлоконструкций, ОбщийВесМеталлолома, ЭтапСпецификации);
					ЗаписатьВесВРесурснуюСпецификацию(Спецификация, СтрокаИзМеталлоконструкций, ЭтапСпецификации, ОбщийВесГП, ВесПрошлойМеталлоконструкции, ЕдиницаИзмерения);
					  
					Спецификация.Статус = Перечисления.СтатусыСпецификаций.Действует;
					Спецификация.Записать();
					//*- Записать вес в номенклатуру
					
					ЗаписатьВесВНоменклатуруГП(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП, ВесПрошлойМеталлоконструкции);
					
					ДополнитьЗаказНоменклатуройГП(ЗаказДокумент, СтрокаИзМеталлоконструкций, ОбщийВесГП, ВесПрошлойМеталлоконструкции, ЕдиницаИзмерения);
				    //*- Записать в регистр сведений Основные спецификации
					
					ЗаписатьВРегистрОсновныеСпецификации(МеталлоконструкцияСсылка, Спецификация.Ссылка);
					ОбщийВесГП 			= 0; 
					ОбщийВесМеталлолома = 0;
					ВесПрошлойМеталлоконструкции = 0;
				КонецЕсли;
				
				
				//*- Создать новую номенклатуру	Готовой продукции
				МеталлоконструкцияСсылка = СоздатьИВернутьНоменклатуруГотовойПродукции(СтрокаИзМеталлоконструкций, ЗаказДокумент.Ссылка); 
				СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка = МеталлоконструкцияСсылка;
				
				Спецификация 		= СоздатьИВернутьСпецификацию(СтрокаИзМеталлоконструкций, ОбщийВесГП);
				ЭтапСпецификации 	= СоздатьИВернутьЭтапСпецификации(СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка, Спецификация.Ссылка);
					
				ПрошлоеНазваниеМеталлоконструкции = СтрокаИзМеталлоконструкций.НазваниеМеталлоконструкции;
			КонецЕсли;
			
			ВключитьВМатериалыИУслугиСпецификацииНоменклатуруМПЗ(Спецификация, СтрокаИзМеталлоконструкций, ЭтапСпецификации);
			
			ОбщийВесГП 				= ОбщийВесГП + СтрокаИзМеталлоконструкций.ВесВсех;
			ОбщийВесМеталлолома 	= ОбщийВесМеталлолома + Окр(СтрокаИзМеталлоконструкций.ВесВсех * (Объект.ПроцентНаРасход / 100), 2);
			
			ВесПрошлойМеталлоконструкции = СтрокаИзМеталлоконструкций.ИтоговыйВесМеталлоконструкции;
			КоличествоПрошлойМеталлоконструкции = СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;

		КонецЦикла;
		
		Если ЗначениеЗаполнено(Спецификация.Ссылка) Тогда
			СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка = МеталлоконструкцияСсылка;
			СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций = КоличествоПрошлойМеталлоконструкции;
			ВключитьВВозвратныеОтходыСпецификацииНоменклатуруМПЗ(Спецификация, СтрокаИзМеталлоконструкций, ОбщийВесМеталлолома, ЭтапСпецификации);
			ЕдиницаИзмерения = СоздатьИВернутьИндивидуальнуюЕдиницуИзмерения(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП, ВесПрошлойМеталлоконструкции);
			ЗаписатьВесВРесурснуюСпецификацию(Спецификация, СтрокаИзМеталлоконструкций, ЭтапСпецификации, ОбщийВесГП, ВесПрошлойМеталлоконструкции,ЕдиницаИзмерения);
			Спецификация.Статус = Перечисления.СтатусыСпецификаций.Действует;
			Спецификация.Записать();
			СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка = МеталлоконструкцияСсылка;
				
			ЗаписатьВРегистрОсновныеСпецификации(МеталлоконструкцияСсылка, Спецификация.Ссылка);
			ЗаписатьВесВНоменклатуруГП(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП, ВесПрошлойМеталлоконструкции);
			
					
			ДополнитьЗаказНоменклатуройГП(ЗаказДокумент, СтрокаИзМеталлоконструкций, ОбщийВесГП, ВесПрошлойМеталлоконструкции, ЕдиницаИзмерения);
				
			
		КонецЕсли;
		
		
		ЗафиксироватьТранзакцию();
		Сообщить("Все заполнено!", СтатусСообщения.Информация);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Сообщить(ОписаниеОшибки,СтатусСообщения.ОченьВажное);
		ОтменитьТранзакцию();
	КонецПопытки;

КонецПроцедуры


&НаСервере
Функция  СоздатьИВернутьИндивидуальнуюЕдиницуИзмерения(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП, ВесПрошлойМеталлоконструкции)

	ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
	ЕдиницаИзмерения.Владелец = МеталлоконструкцияСсылка;
	//ЕдиницаИзмерения.Числитель = ОбщийВесГП / 1000;
	ЕдиницаИзмерения.Числитель = ВесПрошлойМеталлоконструкции / 1000;
	Если ЕдиницаИзмерения.Числитель = 0 Тогда
		ЕдиницаИзмерения.Числитель = 0.001;
	КонецЕсли;
	ЕдиницаИзмерения.Наименование = "шт (" + ЕдиницаИзмерения.Числитель + " т.)";
	ЕдиницаИзмерения.ВесЕдиницаИзмерения = ЕдиницаИзмеренияТонна;
	ЕдиницаИзмерения.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка;
	ЕдиницаИзмерения.ЕдиницаИзмерения = ЕдиницаИзмеренияШТ;
	ЕдиницаИзмерения.ВысотаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("006");
	ЕдиницаИзмерения.ГлубинаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("006");
	
	ЕдиницаИзмерения.Знаменатель = 1;
	ЕдиницаИзмерения.ЛинейныеРазмерыПредставление = "0 X 0 X 0";
	ЕдиницаИзмерения.ОбъемЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("113");
	ЕдиницаИзмерения.ШиринаЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("113");
	ЕдиницаИзмерения.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
	ЕдиницаИзмерения.Записать();
	
	Возврат ЕдиницаИзмерения.Ссылка;
	
	
КонецФункции



&НаСервере
Функция СоздатьИВернутьСпецификацию(СтрокаИзМеталлоконструкций, ОбщийВесГП)
	
	Спецификация 											= Справочники.РесурсныеСпецификации.СоздатьЭлемент();
	Спецификация.Наименование 								= СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка.Наименование;
	Спецификация.Статус 									= Перечисления.СтатусыСпецификаций.ВРазработке;
	Спецификация.МинимальнаяПартияВыпуска   				= 0.001;
	Спецификация.ВыпускПроизвольнымиПорциями 				= Истина;
	Спецификация.ТипПроизводственногоПроцесса				= Перечисления.ТипыПроизводственныхПроцессов.Сборка;
	Спецификация.СпособРаспределенияЗатратНаВыходныеИзделия = Перечисления.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости;
	Спецификация.Ответственный 								= ПараметрыСеанса.ТекущийПользователь;
	Спецификация.ОптимальноеКоличествоПередачиМеждуЭтапами	= 1;
	Спецификация.ИспользоватьНесколькоВыходныхИзделий		= Истина;
	Спецификация.Записать();
	
	
	
	Возврат Спецификация;
	
КонецФункции

&НаСервере
Процедура ЗаписатьВесВРесурснуюСпецификацию(Спецификация, СтрокаИзМеталлоконструкций, Этап, ОбщийВесГП, ВесПрошлойМеталлоконструкции, ЕдиницаИзмерения)
		
	СтрокаВСпецификацииВыходныеИзделия 									= Спецификация.ВыходныеИзделия.Добавить();
	СтрокаВСпецификацииВыходныеИзделия.Номенклатура 					= СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка;
	//СтрокаВСпецификацииВыходныеИзделия.Количество 						= ЕдиницаИзмерения.Числитель * СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	//СтрокаВСпецификацииВыходныеИзделия.КоличествоУпаковок 				= СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	
	СтрокаВСпецификацииВыходныеИзделия.Количество 						= ВесПрошлойМеталлоконструкции / 1000;
	СтрокаВСпецификацииВыходныеИзделия.КоличествоУпаковок 				= ВесПрошлойМеталлоконструкции;
	СтрокаВСпецификацииВыходныеИзделия.Упаковка							= ЕдиницаИзмеренияКг;
	СтрокаВСпецификацииВыходныеИзделия.Этап								= Этап; // Создать и вернуть этап спецификации
	//СтрокаВСпецификацииВыходныеИзделия.Этап							= СоздатьИВернутьЭтапСпецификации(СтрокаИзМеталлоконструкций, Спецификация.Ссылка); // Создать и вернуть этап спецификации
	СтрокаВСпецификацииВыходныеИзделия.СпособАвтовыбораНоменклатуры 	= Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ;
	СтрокаВСпецификацииВыходныеИзделия.СпособАвтовыбораХарактеристики	= Перечисления.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ;
	Спецификация.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРаботуВРесурснуюСпецификациюДляСтройки(Спецификация, Выборка, СтроительнаяРаботаСсылка, Этап)
		
	СтрокаВСпецификацииВыходныеИзделия 									= Спецификация.ВыходныеИзделия.Добавить();
	СтрокаВСпецификацииВыходныеИзделия.Номенклатура 					= СтроительнаяРаботаСсылка;
	СтрокаВСпецификацииВыходныеИзделия.Количество 						= Выборка.КоличествоРаботыДляСпецификации;
	СтрокаВСпецификацииВыходныеИзделия.КоличествоУпаковок 				= Выборка.КоличествоРаботыДляСпецификации;
	СтрокаВСпецификацииВыходныеИзделия.Этап								= Этап; 
	СтрокаВСпецификацииВыходныеИзделия.СпособАвтовыбораНоменклатуры 	= Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ;
	СтрокаВСпецификацииВыходныеИзделия.СпособАвтовыбораХарактеристики	= Перечисления.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ;
	Спецификация.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВРегистрОсновныеСпецификации(Ссылка, Спецификация)

	ЗаписьВРегистр 							= РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
	ЗаписьВРегистр.Номенклатура 			= Ссылка;
	ЗаписьВРегистр.Спецификация 			= Спецификация;
	ЗаписьВРегистр.ТребуетсяНастройка 		= Истина;
	ЗаписьВРегистр.ПолноеНаименованиеМодели = "<Настройки не заданы>";
	ЗаписьВРегистр.Записать(Истина);
	
	
КонецПроцедуры
	
&НаСервере
Процедура ВключитьВМатериалыИУслугиСпецификацииНоменклатуруМПЗ(Спецификация, СтрокаИзМеталлоконструкций, Этап)
	
	//СтрокаВСпецификацииВыходныеИзделия = Спецификация.ВыходныеИзделия[0];
	СтрокаВСпецификацииМатериалыИУслуги 								= Спецификация.МатериалыИУслуги.Добавить();
	СтрокаВСпецификацииМатериалыИУслуги.Номенклатура					= СтрокаИзМеталлоконструкций.Номенклатура; 
	СтрокаВСпецификацииМатериалыИУслуги.Количество 						= Окр(СтрокаИзМеталлоконструкций.ВесВсех * (1 + Объект.ПроцентНаРасход / 100) / 1000, 3);
	СтрокаВСпецификацииМатериалыИУслуги.КоличествоУпаковок 				= Окр(СтрокаИзМеталлоконструкций.ВесВсех * (1 + Объект.ПроцентНаРасход / 100), 3);
	Если СтрокаВСпецификацииМатериалыИУслуги.Количество 		= 0 Тогда
		СтрокаВСпецификацииМатериалыИУслуги.Количество = 0.001;
	КонецЕсли;
	
		
	
	СтрокаВСпецификацииМатериалыИУслуги.Упаковка		 				= ЕдиницаИзмеренияКг;
	СтрокаВСпецификацииМатериалыИУслуги.Этап							= Этап;
	СтрокаВСпецификацииМатериалыИУслуги.СтатьяКалькуляции				= Объект.СтатьяКалькуляцииДляМПЗ; //Дать выбрать перед стартом;
	СтрокаВСпецификацииМатериалыИУслуги.СпособАвтовыбораНоменклатуры 	= Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ;
	СтрокаВСпецификацииМатериалыИУслуги.СпособАвтовыбораХарактеристики	= Перечисления.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ;
	СтрокаВСпецификацииМатериалыИУслуги.СпособПолученияМатериала		= Перечисления.СпособыПолученияМатериаловВСпецификации.Обеспечивать;	
	СтрокаВСпецификацииМатериалыИУслуги.КлючСвязи 						= Новый УникальныйИдентификатор;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьВМатериалыИУслугиСпецификацииНоменклатуруМПЗДляСтройки(Спецификация, Выборка, Этап)
	

	СтрокаВСпецификацииМатериалыИУслуги 								= Спецификация.МатериалыИУслуги.Добавить();
	СтрокаВСпецификацииМатериалыИУслуги.Номенклатура					= Выборка.Номенклатура; 
	СтрокаВСпецификацииМатериалыИУслуги.Количество 						= Выборка.Количество;
	СтрокаВСпецификацииМатериалыИУслуги.КоличествоУпаковок 				= Выборка.Количество;

	СтрокаВСпецификацииМатериалыИУслуги.Упаковка		 				= Выборка.ЕдиницаИзмерения;
	СтрокаВСпецификацииМатериалыИУслуги.Этап							= Этап; 
	СтрокаВСпецификацииМатериалыИУслуги.СтатьяКалькуляции				= ?(НЕ Выборка.ТипНоменклатурыСтрокой = "МПЗ", 
																			Объект.СтатьяКалькуляцииДляРабот, Объект.СтатьяКалькуляцииДляМПЗ);
	СтрокаВСпецификацииМатериалыИУслуги.СпособАвтовыбораНоменклатуры 	= Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ;
	СтрокаВСпецификацииМатериалыИУслуги.СпособАвтовыбораХарактеристики	= Перечисления.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ;
	СтрокаВСпецификацииМатериалыИУслуги.СпособПолученияМатериала		= Перечисления.СпособыПолученияМатериаловВСпецификации.Обеспечивать;	
	СтрокаВСпецификацииМатериалыИУслуги.КлючСвязи 						= Новый УникальныйИдентификатор;
	
КонецПроцедуры

&НаСервере
Процедура ВключитьВВозвратныеОтходыСпецификацииНоменклатуруМПЗ(Спецификация, СтрокаИзМеталлоконструкций, ОбщийВесМеталлолома, Этап)
	
	//СтрокаВСпецификацииВыходныеИзделия = Спецификация.ВыходныеИзделия[0];
	  
	СтрокаВозвратныеОтходы 									= Спецификация.ВозвратныеОтходы.Добавить();
	СтрокаВозвратныеОтходы.Номенклатура 					= Объект.Металлолом;
	СтрокаВозвратныеОтходы.Количество 						= ОбщийВесМеталлолома / 1000;
	СтрокаВозвратныеОтходы.КоличествоУпаковок 				= ОбщийВесМеталлолома;
	СтрокаВозвратныеОтходы.Упаковка		 					= ЕдиницаИзмеренияКг;
	СтрокаВозвратныеОтходы.Этап								= Этап;
	
	//СтрокаВозвратныеОтходы.Этап								= СтрокаВСпецификацииВыходныеИзделия.Этап;
	СтрокаВозвратныеОтходы.СтатьяКалькуляции				= Объект.СтатьяКалькуляцииДляМПЗ; //Дать выбрать перед стартом;
	СтрокаВозвратныеОтходы.СпособАвтовыбораНоменклатуры 	= Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ;
	СтрокаВозвратныеОтходы.СпособАвтовыбораХарактеристики	= Перечисления.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ;	
	СтрокаВозвратныеОтходы.КлючСвязи 						= Новый УникальныйИдентификатор;
	
КонецПроцедуры

&НаСервере
Функция ВернутьТЗМеталлоконструкцийССоответствиемНоменклатур()

	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Металлоконструкции.НазваниеМеталлоконструкции КАК НазваниеМеталлоконструкции,
		|	Металлоконструкции.НазваниеМатериала КАК НазваниеМатериала,
		|	Металлоконструкции.Количество КАК Количество,
		|	Металлоконструкции.Длина КАК Длина,
		|	Металлоконструкции.Сталь КАК Сталь,
		|	Металлоконструкции.ВесОдной КАК ВесОдной,
		|	Металлоконструкции.ВесВсех КАК ВесВсех,
		|	Металлоконструкции.МеталлоконструкцияСсылка КАК МеталлоконструкцияСсылка,
		|	Металлоконструкции.МатериалСсылка КАК МатериалСсылка,
		|	Металлоконструкции.КоличествоМеталлоконструкций КАК КоличествоМеталлоконструкций,
		|	Металлоконструкции.ИтоговыйВесМеталлоконструкции КАК ИтоговыйВесМеталлоконструкции
		|ПОМЕСТИТЬ ВТ_Металлоконструкции
		|ИЗ
		|	&Металлоконструкции КАК Металлоконструкции
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеПоНоменклатуре.Номенклатура КАК Номенклатура,
		|	СоответствиеПоНоменклатуре.НоменклатураСтрокой КАК НоменклатураСтрокой
		|ПОМЕСТИТЬ ВТ_СоответствиеПоНоменклатуре
		|ИЗ
		|	&СоответствиеПоНоменклатуре КАК СоответствиеПоНоменклатуре
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_СоответствиеПоНоменклатуре.Номенклатура) КАК Номенклатура,
		|	ВТ_СоответствиеПоНоменклатуре.НоменклатураСтрокой КАК НоменклатураСтрокой
		|ПОМЕСТИТЬ ВТ_СоответствиеПоНоменклатуреБезДублей
		|ИЗ
		|	ВТ_СоответствиеПоНоменклатуре КАК ВТ_СоответствиеПоНоменклатуре
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Металлоконструкции.НазваниеМеталлоконструкции КАК НазваниеМеталлоконструкции,
		|	ВТ_Металлоконструкции.НазваниеМатериала КАК НазваниеМатериала,
		|	ВТ_Металлоконструкции.Количество КАК Количество,
		|	ВТ_Металлоконструкции.Длина КАК Длина,
		|	ВТ_Металлоконструкции.Сталь КАК Сталь,
		|	ВТ_Металлоконструкции.ВесОдной КАК ВесОдной,
		|	ВТ_Металлоконструкции.ВесВсех КАК ВесВсех,
		|	ВТ_Металлоконструкции.МеталлоконструкцияСсылка КАК МеталлоконструкцияСсылка,
		|	ВТ_Металлоконструкции.МатериалСсылка КАК МатериалСсылка,
		|	ВТ_Металлоконструкции.КоличествоМеталлоконструкций КАК КоличествоМеталлоконструкций,
		|	ВТ_Металлоконструкции.ИтоговыйВесМеталлоконструкции КАК ИтоговыйВесМеталлоконструкции,
		|	ВТ_СоответствиеПоНоменклатуреБезДублей.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТ_Металлоконструкции КАК ВТ_Металлоконструкции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствиеПоНоменклатуреБезДублей КАК ВТ_СоответствиеПоНоменклатуреБезДублей
		|		ПО ВТ_Металлоконструкции.НазваниеМатериала = ВТ_СоответствиеПоНоменклатуреБезДублей.НоменклатураСтрокой";
	
	Запрос.УстановитьПараметр("Металлоконструкции",			Объект.Металлоконструкции.Выгрузить());
	Запрос.УстановитьПараметр("СоответствиеПоНоменклатуре",	Объект.СоответствиеПоНоменклатуре.Выгрузить());
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНоменклатуруМПЗВСоответствии()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ВернутьТекстЗапросаДляПоискаОтсутствующейНоменклатурыМПЗМеталлоконструкции();

	Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", Объект.СоответствиеПоНоменклатуре.Выгрузить());
	Запрос.УстановитьПараметр("ТЧМатериалыИзФайла", Объект.ТЧМатериалыИзФайла.Выгрузить());
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	//ТЗ = Результат.Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяНоменклатура 								= Справочники.Номенклатура.СоздатьЭлемент();
		НоваяНоменклатура.Наименование 					= Выборка.НоменклатураСтрокой;
		НоваяНоменклатура.НаименованиеПолное 			= Выборка.НоменклатураСтрокой;
		НоваяНоменклатура.ЕдиницаИзмерения 				= ЕдиницаИзмеренияТонна;
		НоваяНоменклатура.ЕдиницаДляОтчетов 			= ЕдиницаИзмеренияТонна;
		НоваяНоменклатура.КоэффициентЕдиницыДляОтчетов 	= 1;
		НоваяНоменклатура.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчета;
		НоваяНоменклатура.ВидНоменклатуры 				= Объект.ВидНоменклатуры;
		НоваяНоменклатура.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчетаДляМПЗ;
		НоваяНоменклатура.ИспользованиеХарактеристик 	= Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
		НоваяНоменклатура.Качество 						= Перечисления.ГрадацииКачества.Новый;
		НоваяНоменклатура.СтавкаНДС 					= Перечисления.СтавкиНДС.НДС20;
		НоваяНоменклатура.ТипНоменклатуры 				= Перечисления.ТипыНоменклатуры.Товар;
		НоваяНоменклатура.ОсобенностьУчета 				= Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
		НоваяНоменклатура.ВариантОформленияПродажи		= Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		НоваяНоменклатура.ВесЕдиницаИзмерения  			= ЕдиницаИзмеренияТонна;
		НоваяНоменклатура.ВесЗнаменатель 				= 1;
		НоваяНоменклатура.ВесИспользовать 				= Истина;
		НоваяНоменклатура.ВесМожноУказыватьВДокументах 	= Истина;
		НоваяНоменклатура.ВесЧислитель 					= 1;
					
		
		
		НоваяНоменклатура.Записать();	
	
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВесВНоменклатуруГП(СтрокаИзМеталлоконструкций, МеталлоконструкцияСсылка, ОбщийВесГП, ВесПрошлойМеталлоконструкции)
	
	МеталлоконструкцияОбъект 									= МеталлоконструкцияСсылка.ПолучитьОбъект();
	МеталлоконструкцияОбъект.ВесЕдиницаИзмерения  				= ЕдиницаИзмеренияКг;
	МеталлоконструкцияОбъект.ВесЗнаменатель 					= 1;
	МеталлоконструкцияОбъект.ВесИспользовать 					= Истина;
	МеталлоконструкцияОбъект.ВесМожноУказыватьВДокументах 		= Истина;
	МеталлоконструкцияОбъект.КоэффициентЕдиницыДляОтчетов 		= ВесПрошлойМеталлоконструкции / 1000;
	МеталлоконструкцияОбъект.ВесЧислитель 						= ВесПрошлойМеталлоконструкции / 1000;
	//МеталлоконструкцияОбъект.КоэффициентЕдиницыДляОтчетов 		= ОбщийВесГП / СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций / 1000;
	//МеталлоконструкцияОбъект.ВесЧислитель 						= ОбщийВесГП / СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций / 1000;
	Если МеталлоконструкцияОбъект.КоэффициентЕдиницыДляОтчетов = 0 Тогда
		МеталлоконструкцияОбъект.КоэффициентЕдиницыДляОтчетов = 0.001;
	КонецЕсли;
	//МеталлоконструкцияОбъект.ВесЧислитель 						= 1;
	
	МеталлоконструкцияОбъект.ИспользоватьУпаковки  				= Истина;
	МеталлоконструкцияОбъект.НаборУпаковок						= Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры;
	МеталлоконструкцияОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Функция СоздатьИВернутьЭтапСпецификации(Ссылка, СпецификацияСсылка)
	
	ЭтапСпецификации 														= Справочники.ЭтапыПроизводства.СоздатьЭлемент();
	ЭтапСпецификации.Наименование 											= Ссылка.Наименование;
	ЭтапСпецификации.Владелец	                                            = СпецификацияСсылка;
	ЭтапСпецификации.НомерЭтапа 											= 1;
	ЭтапСпецификации.Подразделение 											= Объект.Подразделение;
	ЭтапСпецификации.ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий	= 1;
	ЭтапСпецификации.ДлительностьЭтапа 										= 1;
	ЭтапСпецификации.ЕдиницаИзмеренияДлительностиЭтапа 						= Перечисления.ЕдиницыИзмеренияВремени.День;
	ЭтапСпецификации.ЕдиницаИзмеренияПредварительногоБуфера	 				= Перечисления.ЕдиницыИзмеренияВремени.День;
	ЭтапСпецификации.ЕдиницаИзмеренияЗавершающегоБуфера 					= Перечисления.ЕдиницыИзмеренияВремени.День;
	ЭтапСпецификации.ЗанимаемаяМощность 									= 100;
	ЭтапСпецификации.Записать();
	
	Возврат ЭтапСпецификации.Ссылка;
	
КонецФункции
	
&НаСервере
Функция СоздатьИВернутьДокументЗаказКлиента()
	
	ЗаказДокумент 							= Документы.ЗаказКлиента.СоздатьДокумент();
	ЗаказДокумент.Статус					= Перечисления.СтатусыЗаказовКлиентов.НеСогласован;
	ЗаказДокумент.Приоритет					= Справочники.Приоритеты.НайтиПоНаименованию("Средний");
	ЗаказДокумент.Дата						= ТекущаяДата();                               
	ЗаказДокумент.Организация 				= Объект.Организация;
	ЗаказДокумент.Подразделение				= Объект.Подразделение;
	ЗаказДокумент.Валюта					= Справочники.Валюты.НайтиПоКоду("643");
	ЗаказДокумент.НаправлениеДеятельности 	= Объект.НаправлениеДеятельности;
	ЗаказДокумент.Комментарий			 	= Объект.СтроительнаяРаботаСтрокой;
	
	ЗаказДокумент.Записать(РежимЗаписиДокумента.Запись);	
	
	Возврат ЗаказДокумент;
	
КонецФункции

&НаСервере
Процедура ДополнитьЗаказНоменклатуройГП(ЗаказДокумент, СтрокаИзМеталлоконструкций, ОбщийВесГП, ВесПрошлойМеталлоконструкции, ЕдиницаИзмерения)
	
	СтрокаВЗаказе = ЗаказДокумент.Товары.Добавить();
	
	СтрокаВЗаказе.Номенклатура 			= СтрокаИзМеталлоконструкций.МеталлоконструкцияСсылка;
	СтрокаВЗаказе.Упаковка 				= ЕдиницаИзмеренияТонна;
	//СтрокаВЗаказе.Количество 			= ОбщийВесГП / 1000 * СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	//СтрокаВЗаказе.КоличествоУпаковок 	= ОбщийВесГП / 1000 * СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	СтрокаВЗаказе.Количество 			= ВесПрошлойМеталлоконструкции / 1000 * СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	СтрокаВЗаказе.КоличествоУпаковок 	= ВесПрошлойМеталлоконструкции / 1000 * СтрокаИзМеталлоконструкций.КоличествоМеталлоконструкций;
	
	ЗаказДокумент.Записать();
	
КонецПроцедуры

&НаСервере
Функция СоздатьИВернутьНоменклатуруГотовойПродукции(СтрокаИзМеталлоконструкций, ЗаказДокументСсылка)

	
	НоваяНоменклатура 								= Справочники.Номенклатура.СоздатьЭлемент();
	НоваяНоменклатура.Наименование 					= СтрокаИзМеталлоконструкций.НазваниеМеталлоконструкции + " " + 
														ЗаказДокументСсылка.Номер + "/" + Формат(ЗаказДокументСсылка.Дата, "ДФ=ддММгг");
	НоваяНоменклатура.НаименованиеПолное 			= "Металлоконструкция " + СтрокаИзМеталлоконструкций.НазваниеМеталлоконструкции;
	
	//НоваяНоменклатура.ЕдиницаИзмерения 				= ЕдиницаИзмеренияШТ;
	//*-Изменение в ТЗ...Потребовалось для ПТО, которые не справились с осознанием 
	//тяжести бытия и увы, не осилили использование новых единиц измерения
	
	//*-Опять поменяли на единица хранения - тонна, единица отчетов - штука.
	
	НоваяНоменклатура.ЕдиницаИзмерения 				= ЕдиницаИзмеренияТонна;
	//НоваяНоменклатура.ЕдиницаДляОтчетов 			= ЕдиницаИзмеренияТонна;
	НоваяНоменклатура.ЕдиницаДляОтчетов             = ЕдиницаИзмеренияШТ;
	НоваяНоменклатура.КоэффициентЕдиницыДляОтчетов 	= 1;
	НоваяНоменклатура.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчета;
	НоваяНоменклатура.ВидНоменклатуры 				= Объект.ВидНоменклатуры;
	НоваяНоменклатура.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчета;
	НоваяНоменклатура.ИспользованиеХарактеристик 	= Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
	НоваяНоменклатура.Качество 						= Перечисления.ГрадацииКачества.Новый;
	НоваяНоменклатура.СтавкаНДС 					= Перечисления.СтавкиНДС.НДС20;
	НоваяНоменклатура.ТипНоменклатуры 				= Перечисления.ТипыНоменклатуры.Товар;
	НоваяНоменклатура.ОсобенностьУчета 				= Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
	НоваяНоменклатура.ВариантОформленияПродажи		= Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	
	Если НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Вес Тогда
		
		НоваяНоменклатура.ВесЕдиницаИзмерения  				= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ВесЗнаменатель 					= 1;
		НоваяНоменклатура.ВесИспользовать 					= Истина;
		НоваяНоменклатура.ВесМожноУказыватьВДокументах 		= Истина;
		НоваяНоменклатура.ВесЧислитель 						= 1;
				
	ИначеЕсли НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Объем Тогда
	
		НоваяНоменклатура.ОбъемЕдиницаИзмерения  			= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ОбъемЗнаменатель 					= 1;
		НоваяНоменклатура.ОбъемИспользовать 				= Истина;
		НоваяНоменклатура.ОбъемМожноУказыватьВДокументах 	= Истина;
		НоваяНоменклатура.ОбъемЧислитель = 1;
	
	ИначеЕсли НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Площадь Тогда
		
		НоваяНоменклатура.ПлощадьЕдиницаИзмерения  			= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ПлощадьЗнаменатель 				= 1;
		НоваяНоменклатура.ПлощадьИспользовать 				= Истина;
		НоваяНоменклатура.ПлощадьМожноУказыватьВДокументах 	= Истина;
		НоваяНоменклатура.ПлощадьЧислитель 					= 1;
				
	КонецЕсли;
	
	НоваяНоменклатура.Записать();	
	
	Возврат НоваяНоменклатура.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	//Проверить соответствие всех единиц измерений
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияЕдиницИзмерения();
	
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияРеквизитовВНастройке(ЭтоУспех);
	
	ЭтоУспех = ВернутьРезультатПроверкиСоответствияЕдиницИзмеренияНоменклатурыИзФайлаНоменклатуреБазы(ЭтоУспех);
	
	Если НЕ ЭтоУспех Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеСоответствияПоНоменклатуре();
	ЗаполнитьНоменклатуруВСоответствии();
	СоздатьСтроительнуюРаботуИЗаполнитьМатериалы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервереДляКА2()
	//*-ключ
	Если НЕ ПодтверждениеДействий Тогда
		Сообщить("Подтвердите корректность настроек во вкладке Настройки");
		Возврат;
	КонецЕсли;

	
	
	//Проверить соответствие всех единиц измерений
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияЕдиницИзмерения();
	
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияРеквизитовВНастройке(ЭтоУспех);
	
	ЭтоУспех = ВернутьРезультатПроверкиСоответствияЕдиницИзмеренияНоменклатурыИзФайлаНоменклатуреБазы(ЭтоУспех);
	//*-
	ЭтоУспех = ПроверитьКодПроектаИПодобратьЗаполнитьГАУиГФУДляГПиМПЗПодСтройку(ЭтоУспех); 
	
	//*-
	Если НЕ ЭтоУспех Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеСоответствияПоНоменклатуре();
	ЗаполнитьНоменклатуруВСоответствии();
	ОбработатьДанныеСоответствияПоНоменклатуре();

	СоздатьЗаказКлиентаСпецификациюИГотовуюПродукцию();
	ПодтверждениеДействий = Ложь;
	
КонецПроцедуры

Функция ПроверитьКодПроектаИПодобратьЗаполнитьГАУиГФУДляГПиМПЗПодСтройку(ЭтоУспех)
	
	Если НЕ ЗначениеЗаполнено(Объект.КодПроекта) Тогда
	
		Сообщить("Укажите код проекта!");
		Результат = Ложь;
		
	КонецЕсли;
	Если ЭтоУспех = Истина И Результат = Ложь Тогда
	
		ЭтоУспех = Ложь;
			
	КонецЕсли;
	
	Если не ЭтоУспех Тогда
		Возврат ЭтоУспех;
	КонецЕсли;
	
	//Объект.ВидНоменклатуры 					= Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	//Объект.ВидНоменклатурыДляМПЗ	 			= Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	//Объект.ВидНоменклатурыДляРабот 			= Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	Объект.ГруппаАналитическогоУчета			= Справочники.ГруппыАналитическогоУчетаНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	Объект.ГруппаАналитическогоУчетаДляРабот	= Справочники.ГруппыАналитическогоУчетаНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	Объект.ГруппаАналитическогоУчетаДляМПЗ		= Справочники.ГруппыАналитическогоУчетаНоменклатуры.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	Объект.НаправлениеДеятельности				= Справочники.НаправленияДеятельности.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	Объект.Подразделение						= Справочники.СтруктураПредприятия.НайтиПоНаименованию(Объект.КодПроекта, Ложь);
	
	Возврат ЭтоУспех;
	
КонецФункции


&НаСервере
Функция ВернутьРезультатПроверкиСоответствияЕдиницИзмеренияНоменклатурыИзФайлаНоменклатуреБазы(ЭтоУспех)
		
	Результат = Истина;
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = ВернутьТекстСоответствияЕдиницИзмеренияНоменклатурыИзФайлаНоменклатуреБазы();
	
	Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", 	Объект.СоответствиеПоНоменклатуре.Выгрузить());
	Запрос.УстановитьПараметр("ТЗ_СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
	Запрос.УстановитьПараметр("ТЧМатериалыИзФайла", 			Объект.ТЧМатериалыИзФайла.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();

	
	Результат = РезультатЗапроса.Пустой();
	
	Выборка = РезультатЗапроса.Выбрать();
	//@skip-warning
	//ТЗ 		= РезультатЗапроса.Выгрузить();
	
	Пока Выборка.Следующий() Цикл
	
		Сообщить(Выборка.НоменклатураСтрокой + " имеет единицу измерения " + Выборка.ЕдиницаИзмеренияСтрокой + ", а в базе " + Выборка.Номенклатура.ЕдиницаИзмерения);	
	
	КонецЦикла;
	
	
		
	Если ЭтоУспех = Истина И Результат = Ложь Тогда
	
		ЭтоУспех = Ложь;
			
	КонецЕсли;
	
	Возврат ЭтоУспех;
	
КонецФункции

&НаСервере
Функция ВернутьТекстСоответствияЕдиницИзмеренияНоменклатурыИзФайлаНоменклатуреБазы()
	
	Возврат "ВЫБРАТЬ 
	|	ТЧМатериалыИзФайла.НоменклатураСтрокой КАК НоменклатураСтрокой,
	|	ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	|	ТЧМатериалыИзФайла.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТЧМатериалыИзФайла
	|ИЗ
	|	&ТЧМатериалыИзФайла КАК ТЧМатериалыИзФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_СоответствиеПоНоменклатуре.Номенклатура,
	|	ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеПоНоменклатуре
	|ИЗ
	|	&ТЗ_СоответствиеПоНоменклатуре КАК ТЗ_СоответствиеПоНоменклатуре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	|	ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой КАК КоэфициентПереводаКБазовой
	|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеЕдиницИзмерений
	|ИЗ
	|	&ТЗ_СоответствиеЕдиницИзмерений КАК ТЗ_СоответствиеЕдиницИзмерений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//
	|Выбрать различные
	|	ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой,
	|	ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой,
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура,
	|	ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ТЧМатериалыИзФайла КАК ВТ_ТЧМатериалыИзФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеПоНоменклатуре КАК ВТ_ТЗ_СоответствиеПоНоменклатуре
	|		ПО ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой = ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений
	|		ПО ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой = ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой
	|ГДЕ
	|	НЕ ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура.ЕдиницаИзмерения <> ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения";
	
КонецФункции


Функция ВернутьТекстЗапросаНоменклатурыИЕдиницИзмеренияИзБазы()
	
	Возврат "ВЫБРАТЬ
	        |	ТЧМатериалыИзФайла.Нпп КАК Нпп,
	        |	ТЧМатериалыИзФайла.Артикул КАК Артикул,
	        |	ТЧМатериалыИзФайла.НазваниеРаботыДляСпецификации КАК НазваниеРаботыДляСпецификации,
	        |	ТЧМатериалыИзФайла.КоличествоРаботыДляСпецификации КАК КоличествоРаботыДляСпецификации,
	        |	ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокойГП КАК ЕдиницаИзмеренияСтрокойГП,
	        |	ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	        |	ТЧМатериалыИзФайла.НоменклатураСтрокой КАК НоменклатураСтрокой,
	        |	ТЧМатериалыИзФайла.Количество КАК Количество,
	        |	ТЧМатериалыИзФайла.ТипНоменклатурыСтрокой КАК ТипНоменклатурыСтрокой,
	        |	АВТОНОМЕРЗАПИСИ() КАК Номер
	        |ПОМЕСТИТЬ ВТ_ТЧМатериалыИзФайла
	        |ИЗ
	        |	&ТЧМатериалыИзФайла КАК ТЧМатериалыИзФайла
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ТЗ_СоответствиеПоНоменклатуре.Номенклатура КАК Номенклатура,
	        |	ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой КАК НоменклатураСтрокой
	        |ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеПоНоменклатуре
	        |ИЗ
	        |	&ТЗ_СоответствиеПоНоменклатуре КАК ТЗ_СоответствиеПоНоменклатуре
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	        |	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	        |	ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой КАК КоэфициентПереводаКБазовой
	        |ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеЕдиницИзмерений
	        |ИЗ
	        |	&ТЗ_СоответствиеЕдиницИзмерений КАК ТЗ_СоответствиеЕдиницИзмерений
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ТЧМатериалыИзФайла.Нпп КАК Нпп,
	        |	ВТ_ТЧМатериалыИзФайла.Артикул КАК Артикул,
	        |	ВТ_ТЧМатериалыИзФайла.НазваниеРаботыДляСпецификации КАК НазваниеРаботыДляСпецификации,
	        |	ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокойГП КАК ЕдиницаИзмеренияСтрокойГП,
	        |	ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	        |	ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой КАК НоменклатураСтрокой,
	        |	ВТ_ТЧМатериалыИзФайла.ТипНоменклатурыСтрокой КАК ТипНоменклатурыСтрокой,
	        |	ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура КАК Номенклатура,
	        |	ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	        |	ВТ_ТЗ_СоответствиеЕдиницИзмерений2.ЕдиницаИзмерения КАК ЕдиницаИзмеренияГП,
	        |	ВЫБОР
	        |		КОГДА ВТ_ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой <> 0
	        |			ТОГДА ВТ_ТЧМатериалыИзФайла.Количество * ВТ_ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой
	        |		ИНАЧЕ ВТ_ТЧМатериалыИзФайла.Количество
	        |	КОНЕЦ КАК Количество,
	        |	ВЫБОР
	        |		КОГДА ВТ_ТЗ_СоответствиеЕдиницИзмерений2.КоэфициентПереводаКБазовой <> 0
	        |			ТОГДА ВТ_ТЧМатериалыИзФайла.КоличествоРаботыДляСпецификации * ВТ_ТЗ_СоответствиеЕдиницИзмерений2.КоэфициентПереводаКБазовой
	        |		ИНАЧЕ ВТ_ТЧМатериалыИзФайла.КоличествоРаботыДляСпецификации
	        |	КОНЕЦ КАК КоличествоРаботыДляСпецификации,
	        |	ВТ_ТЧМатериалыИзФайла.Номер КАК Номер
	        |ИЗ
	        |	ВТ_ТЧМатериалыИзФайла КАК ВТ_ТЧМатериалыИзФайла
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеПоНоменклатуре КАК ВТ_ТЗ_СоответствиеПоНоменклатуре
	        |		ПО ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой = ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений
	        |		ПО ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой = ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений2
	        |		ПО ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокойГП = ВТ_ТЗ_СоответствиеЕдиницИзмерений2.ЕдиницаИзмеренияСтрокой
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Нпп,
	        |	Номер";
	
КонецФункции

&НаСервере
Функция ВернутьРезультатПроверкиЗаполненияРеквизитовВНастройке(ЭтоУспех)
	//*- добавить больше проверок 
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаАналитическогоУчета) Тогда
	
		Сообщить("Укажите группу аналитического учета!");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
	
		Сообщить("Укажите Вид номенклатуры!");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаФинансовогоУчета) Тогда
	
		Сообщить("Укажите группу финансового учета!");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаФинансовогоУчета) Тогда
	
		Сообщить("Укажите код проекта!");
		Результат = Ложь;
		
	КонецЕсли;
	Если ЭтоУспех = Истина И Результат = Ложь Тогда
	
		ЭтоУспех = Ложь;
			
	КонецЕсли;
	
	Возврат ЭтоУспех;
	
КонецФункции

&НаСервере
Функция ВернутьРезультатПроверкиЗаполненияРеквизитовВНастройкеДляМеталлоконструкций(ЭтоУспех)
	
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаАналитическогоУчета) Тогда
	
		Сообщить("Укажите группу аналитического учета");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
	
		Сообщить("Укажите Вид номенклатуры для МПЗ");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
	
		Сообщить("Укажите Вид Номенклатуры для готовой продукции");
		Результат = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СтатьяКалькуляцииДляМПЗ) Тогда
	
		Сообщить("Укажите Статью калькуляции для МПЗ");
		Результат = Ложь;
		
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
	
		Сообщить("Укажите Организацию");
		Результат = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
	
		Сообщить("Укажите Подразделение");
		Результат = Ложь;
		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.НаправлениеДеятельности) Тогда
	
		Сообщить("Укажите Направление деятельности");
		Результат = Ложь;
		
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(Объект.СкладДляЗаказовКлиента) Тогда
	
		Сообщить("Укажите Склад");
		Результат = Ложь;
		
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(Объект.Металлолом) Тогда
	
		Сообщить("Укажите номенклатуру - металлолом для отходов");
		Результат = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ГруппаФинансовогоУчета) Тогда
	
		Сообщить("Укажите группу финансового учета");
		Результат = Ложь;
		
	КонецЕсли;
	Если ЭтоУспех = Истина И Результат = Ложь Тогда
	
		ЭтоУспех = Ложь;
			
	КонецЕсли;
	
	Возврат ЭтоУспех;
	
КонецФункции

&НаСервере
Процедура СоздатьСтроительнуюРаботуИЗаполнитьМатериалы()
	


	НовыйЭлементСтроительнаяРабота 							= Справочники.УСОERP_СтроительныеРаботы.СоздатьЭлемент();
	
	НовыйЭлементСтроительнаяРабота.Наименование 			= Объект.СтроительнаяРаботаСтрокой;
	НовыйЭлементСтроительнаяРабота.КраткоеНаименование 		= Объект.СтроительнаяРаботаСтрокой;
	НовыйЭлементСтроительнаяРабота.Владелец 				= Объект.ВидСценария;
	НовыйЭлементСтроительнаяРабота.ВидРабот 				= Справочники.УСОERP_ВидыРабот.ПустаяСсылка();
	НовыйЭлементСтроительнаяРабота.ГрафикРаботы				= Объект.ГрафикРабот;	
	НовыйЭлементСтроительнаяРабота.СуммарнаяРабота 			= Ложь;
	
	НовыйЭлементСтроительнаяРабота.НомерРаботыВУровнеСтрокой = 1;
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = ВернутьТекстЗапросаНоменклатурыИЕдиницИзмеренияИзБазы();
	Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", 	Объект.СоответствиеПоНоменклатуре.Выгрузить());
	Запрос.УстановитьПараметр("ТЗ_СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
	Запрос.УстановитьПараметр("ТЧМатериалыИзФайла", 			Объект.ТЧМатериалыИзФайла.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрока 									= НовыйЭлементСтроительнаяРабота.Материалы.Добавить();
		НоваяСтрока.Номенклатура  						= Выборка.Номенклатура;
		НоваяСтрока.КоличествоНаЕдиницуОбъема 			= Выборка.Количество;
		НоваяСтрока.КоличествоНаОбъемРаботы 			= Выборка.Количество;
		НоваяСтрока.КоличествоУпаковокНаЕдиницуОбъема 	= Выборка.Количество;
		НоваяСтрока.КоличествоУпаковокНаОбъемРаботы 	= Выборка.Количество;
		
	КонецЦикла;
	
	НовыйЭлементСтроительнаяРабота.ОбъемРаботы  = 1;
	НовыйЭлементСтроительнаяРабота.ЕдиницаОбъема = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("шт");
	НовыйЭлементСтроительнаяРабота.ЕдиницаЗадержки = Перечисления.ЕдиницыИзмеренияВремени.День;
	НовыйЭлементСтроительнаяРабота.Длительность = 1;
	НовыйЭлементСтроительнаяРабота.ЕдиницаДлительности = Перечисления.ЕдиницыИзмеренияВремени.День;
	
	НовыйЭлементСтроительнаяРабота.ДатаНачала 		= Объект.НачалоРабот;
	НовыйЭлементСтроительнаяРабота.ДатаОкончания 	= Объект.ОкончаниеРабот;
	//НовыйЭлементСтроительнаяРабота.ЕстьПредшественники = Ложь;
	//ДатаНачала
	//ДатаОкончания
	//*-Собрать в единую таблицу застыкованные позиции номенклатуры и единицы измерения,
	//Заполнить их
	
	НовыйЭлементСтроительнаяРабота.Записать();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаказКлиентаСпецификациюИГотовуюПродукцию()
	Перем Спецификация;
	Перем СтроительнаяРаботаСсылка;
	
	НачатьТранзакцию();
	Попытка
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = ВернутьТекстЗапросаНоменклатурыИЕдиницИзмеренияИзБазы();
		Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", 	Объект.СоответствиеПоНоменклатуре.Выгрузить());
		Запрос.УстановитьПараметр("ТЗ_СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
		Запрос.УстановитьПараметр("ТЧМатериалыИзФайла", 			Объект.ТЧМатериалыИзФайла.Выгрузить());
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		Выборка = РезультатЗапроса.Выбрать();
		//*-Создаем общий заказ....
		ЗаказДокумент = СоздатьИВернутьДокументЗаказКлиента();
				
		ПрошлоеНазваниеРаботыДляСпецификации = "";
		
		Пока Выборка.Следующий() Цикл
			///*******
			Если НЕ Выборка.НазваниеРаботыДляСпецификации = ПрошлоеНазваниеРаботыДляСпецификации Тогда
				
				Если НЕ ПрошлоеНазваниеРаботыДляСпецификации = "" Тогда
					
					Спецификация.Статус = Перечисления.СтатусыСпецификаций.Действует;
					Спецификация.Записать();
				
					ЗаписатьВРегистрОсновныеСпецификации(СтроительнаяРаботаСсылка, Спецификация.Ссылка);
					
				КонецЕсли;
				
				СтроительнаяРаботаСсылка = СоздатьИВернутьНоменклатуруСтроительнойРаботы(Выборка); 
				
				ДобавитьСтроительнуюРаботуВЗаказ(ЗаказДокумент, Выборка, СтроительнаяРаботаСсылка);
				
				Спецификация 		= СоздатьИВернутьСпецификациюНаСтроительнуюРаботу(Выборка, СтроительнаяРаботаСсылка);
				ЭтапСпецификации 	= СоздатьИВернутьЭтапСпецификации(СтроительнаяРаботаСсылка, Спецификация.Ссылка);
				
				ЗаписатьРаботуВРесурснуюСпецификациюДляСтройки(Спецификация, Выборка, СтроительнаяРаботаСсылка, ЭтапСпецификации);
				
				ПрошлоеНазваниеРаботыДляСпецификации = Выборка.НазваниеРаботыДляСпецификации;
				
			КонецЕсли;
			
			ВключитьВМатериалыИУслугиСпецификацииНоменклатуруМПЗДляСтройки(Спецификация, Выборка, ЭтапСпецификации);
			
		КонецЦикла;
		
		//*-записываем последнюю спецификацию и дополняем параметрами последнюю работу
		Спецификация.Статус = Перечисления.СтатусыСпецификаций.Действует;
		Спецификация.Записать();
		ЗаписатьВРегистрОсновныеСпецификации(СтроительнаяРаботаСсылка, Спецификация.Ссылка);

		ЗаказДокумент.Записать();	
		
		ЗафиксироватьТранзакцию();
		Сообщить("Все готово, заказ и спецификация созданы!");
		
	Исключение
		
		ОтменитьТранзакцию();
		ОписаниеОшибки = ОписаниеОшибки();
		Сообщить(ОписаниеОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция СоздатьИВернутьНоменклатуруСтроительнойРаботы(Выборка)
	

	НоваяНоменклатура 								= Справочники.Номенклатура.СоздатьЭлемент();
	НоваяНоменклатура.Наименование 					= Объект.КодПроекта + " " + Выборка.НазваниеРаботыДляСпецификации;
	НоваяНоменклатура.НаименованиеПолное 			= Выборка.НазваниеРаботыДляСпецификации;
	НоваяНоменклатура.Артикул			 			= Выборка.Артикул + ?(Выборка.Артикул = "", "", Выборка.НПП);
	//НоваяНоменклатура.ЕдиницаИзмерения 				= ЕдиницаИзмеренияШТ;
	//*-Изменение в ТЗ...Потребовалось для ПТО, которые не справились с осознанием 
	//тяжести бытия и увы, не осилили использование новых единиц измерения
	//*-
	НоваяНоменклатура.ЕдиницаИзмерения 				= Выборка.ЕдиницаИзмеренияГП;
	НоваяНоменклатура.ЕдиницаДляОтчетов 			= Выборка.ЕдиницаИзмеренияГП;
	//*-
	НоваяНоменклатура.КоэффициентЕдиницыДляОтчетов 	= 1;
	НоваяНоменклатура.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчета;
	НоваяНоменклатура.ВидНоменклатуры 				= Объект.ВидНоменклатуры;      
	НоваяНоменклатура.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчета;    
	НоваяНоменклатура.ИспользованиеХарактеристик 	= Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
	НоваяНоменклатура.Качество 						= Перечисления.ГрадацииКачества.Новый;
	НоваяНоменклатура.СтавкаНДС 					= Перечисления.СтавкиНДС.НДС20;
	НоваяНоменклатура.ТипНоменклатуры 				= Перечисления.ТипыНоменклатуры.Товар;
	НоваяНоменклатура.ОсобенностьУчета 				= Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
	НоваяНоменклатура.ВариантОформленияПродажи		= Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	
	Если НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Вес Тогда
		
		НоваяНоменклатура.ВесЕдиницаИзмерения  				= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ВесЗнаменатель 					= 1;
		НоваяНоменклатура.ВесИспользовать 					= Истина;
		НоваяНоменклатура.ВесМожноУказыватьВДокументах 		= Истина;
		НоваяНоменклатура.ВесЧислитель 						= 1;
				
	ИначеЕсли НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Объем Тогда
	
		НоваяНоменклатура.ОбъемЕдиницаИзмерения  			= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ОбъемЗнаменатель 					= 1;
		НоваяНоменклатура.ОбъемИспользовать 				= Истина;
		НоваяНоменклатура.ОбъемМожноУказыватьВДокументах 	= Истина;
		НоваяНоменклатура.ОбъемЧислитель = 1;
	
	ИначеЕсли НоваяНоменклатура.ЕдиницаИзмерения = Перечисления.ТипыИзмеряемыхВеличин.Площадь Тогда
		
		НоваяНоменклатура.ПлощадьЕдиницаИзмерения  			= НоваяНоменклатура.ЕдиницаИзмерения;
		НоваяНоменклатура.ПлощадьЗнаменатель 				= 1;
		НоваяНоменклатура.ПлощадьИспользовать 				= Истина;
		НоваяНоменклатура.ПлощадьМожноУказыватьВДокументах 	= Истина;
		НоваяНоменклатура.ПлощадьЧислитель 					= 1;
				
	КонецЕсли;
	
	НоваяНоменклатура.Записать();	
	
	Возврат НоваяНоменклатура.Ссылка;
	
КонецФункции

&НаСервере
Процедура ДобавитьСтроительнуюРаботуВЗаказ(ЗаказДокумент, Выборка, СтроительнаяРаботаСсылка)
	
	СтрокаВЗаказе 						= ЗаказДокумент.Товары.Добавить();
	СтрокаВЗаказе.Номенклатура   		= СтроительнаяРаботаСсылка;
	СтрокаВЗаказе.Количество 			= Выборка.КоличествоРаботыДляСпецификации;
	СтрокаВЗаказе.КоличествоУпаковок 	= Выборка.КоличествоРаботыДляСпецификации;
	ЗаказДокумент.Записать();
	
КонецПроцедуры

&НаСервере
Функция СоздатьИВернутьСпецификациюНаСтроительнуюРаботу(Выборка, СтроительнаяРаботаСсылка)
	
		
	Спецификация 											= Справочники.РесурсныеСпецификации.СоздатьЭлемент();
	Спецификация.Наименование 								= СтроительнаяРаботаСсылка.Наименование;
	Спецификация.Статус 									= Перечисления.СтатусыСпецификаций.ВРазработке;
	Спецификация.МинимальнаяПартияВыпуска   				= 0.001;
	Спецификация.ВыпускПроизвольнымиПорциями 				= Истина;
	Спецификация.ТипПроизводственногоПроцесса				= Перечисления.ТипыПроизводственныхПроцессов.Сборка;
	Спецификация.СпособРаспределенияЗатратНаВыходныеИзделия = Перечисления.СпособыРаспределенияЗатратНаВыходныеИзделия.ПоДолямСтоимости;
	Спецификация.Ответственный 								= ПараметрыСеанса.ТекущийПользователь;
	Спецификация.ОптимальноеКоличествоПередачиМеждуЭтапами	= 1;
	Спецификация.ИспользоватьНесколькоВыходныхИзделий		= Истина;
	Спецификация.Записать();
	
	
	
	Возврат Спецификация;

	
	
КонецФункции

&НаСервере
Функция ВернутьРезультатПроверкиЗаполненияЕдиницИзмерения()
	
	Отбор = Новый Структура("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	Строки = Объект.СоответствиеЕдиницИзмерений.НайтиСтроки(Отбор);
	Результат = Строки.Количество() = 0;
	Если НЕ Результат Тогда
		Сообщить("Не заполнены соответствия единицы измерения");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВернутьТекстЗапросаДляПоискаОтсутствующейНоменклатурыМПЗМеталлоконструкции()
	//
	Возврат "ВЫБРАТЬ
	|	ТЗ_СоответствиеПоНоменклатуре.Номенклатура,
	|	ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеПоНоменклатуре
	|ИЗ
	|	&ТЗ_СоответствиеПоНоменклатуре КАК ТЗ_СоответствиеПоНоменклатуре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|ИЗ
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре КАК ВТ_ТЗ_СоответствиеПоНоменклатуре
	|ГДЕ
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) И ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой <> """"";
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНоменклатуруВСоответствии()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = ВернутьТекстЗапросаДляПоискаОтсутствующейНоменклатуры();

	Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", Объект.СоответствиеПоНоменклатуре.Выгрузить());
	Запрос.УстановитьПараметр("ТЗ_СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
	Запрос.УстановитьПараметр("ТЧМатериалыИзФайла", Объект.ТЧМатериалыИзФайла.Выгрузить());
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	
	
	//Создаем пока только отсутствующую номенклатуру
	//XXX: ОЧЕНЬ ВАЖНО добавить проверку на несоответствие единиц измерения в справочнике номенклатуры и загружаемом файле.
	//такое грузить нельзя, поскольку не ясно какие единицы измерения.
	//Думаю, что надо перепроверить это после создания отсутствующей номенклатуры
	
	
	
	Пока Выборка.Следующий() Цикл
		
		//НачатьТранзакцию();
		НоваяНоменклатура 								= Справочники.Номенклатура.СоздатьЭлемент();
		НоваяНоменклатура.Наименование 					= Выборка.НоменклатураСтрокой;
		НоваяНоменклатура.НаименованиеПолное 			= Выборка.НоменклатураСтрокой;
		НоваяНоменклатура.ЕдиницаИзмерения 				= Выборка.ЕдиницаИзмерения;
		НоваяНоменклатура.ЕдиницаДляОтчетов 			= Выборка.ЕдиницаИзмерения;
		НоваяНоменклатура.КоэффициентЕдиницыДляОтчетов 	= 1;

		НоваяНоменклатура.ИспользованиеХарактеристик 	= Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
		НоваяНоменклатура.Качество 						= Перечисления.ГрадацииКачества.Новый;
		НоваяНоменклатура.СтавкаНДС 					= Перечисления.СтавкиНДС.НДС20;
		НоваяНоменклатура.ТипНоменклатуры 				= Перечисления.ТипыНоменклатуры.Товар;

		//*-смотря какой тип
		Если Выборка.ТипНоменклатурыСтрокой = "МПЗ" Тогда
			НоваяНоменклатура.ВидНоменклатуры 				= Объект.ВидНоменклатурыДляМПЗ;
			НоваяНоменклатура.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчетаДляМПЗ;
			НоваяНоменклатура.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчетаДляМПЗ;
		Иначе
			НоваяНоменклатура.ВидНоменклатуры 				= Объект.ВидНоменклатурыДляРабот;
			НоваяНоменклатура.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчетаДляРабот;
			НоваяНоменклатура.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчетаДляРабот;
		КонецЕсли;
			
		НоваяНоменклатура.ОсобенностьУчета 				= Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
		НоваяНоменклатура.ВариантОформленияПродажи		= Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		Если Выборка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Вес Тогда
			
			НоваяНоменклатура.ВесЕдиницаИзмерения  				= Выборка.ЕдиницаИзмерения;
			НоваяНоменклатура.ВесЗнаменатель 					= 1;
			НоваяНоменклатура.ВесИспользовать 					= Истина;
			НоваяНоменклатура.ВесМожноУказыватьВДокументах 		= Истина;
			НоваяНоменклатура.ВесЧислитель 						= 1;
					
		ИначеЕсли Выборка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Объем Тогда
		
			НоваяНоменклатура.ОбъемЕдиницаИзмерения  			= Выборка.ЕдиницаИзмерения;
			НоваяНоменклатура.ОбъемЗнаменатель 					= 1;
			НоваяНоменклатура.ОбъемИспользовать 				= Истина;
			НоваяНоменклатура.ОбъемМожноУказыватьВДокументах 	= Истина;
			НоваяНоменклатура.ОбъемЧислитель = 1;
		
		ИначеЕсли Выборка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Площадь Тогда
			
			НоваяНоменклатура.ПлощадьЕдиницаИзмерения  			= Выборка.ЕдиницаИзмерения;
			НоваяНоменклатура.ПлощадьЗнаменатель 				= 1;
			НоваяНоменклатура.ПлощадьИспользовать 				= Истина;
			НоваяНоменклатура.ПлощадьМожноУказыватьВДокументах 	= Истина;
			НоваяНоменклатура.ПлощадьЧислитель 					= 1;
					
		КонецЕсли;
		
		НоваяНоменклатура.Записать();	
	
		//ОтменитьТранзакцию();
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаСервере
Функция ВернутьТекстЗапросаДляПоискаОтсутствующейНоменклатуры()
	
	Возврат "ВЫБРАТЬ
	|	ТЧМатериалыИзФайла.НоменклатураСтрокой КАК НоменклатураСтрокой,
	|	ТЧМатериалыИзФайла.ТипНоменклатурыСтрокой КАК ТипНоменклатурыСтрокой,
	|	ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	|	ТЧМатериалыИзФайла.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТЧМатериалыИзФайла
	|ИЗ
	|	&ТЧМатериалыИзФайла КАК ТЧМатериалыИзФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_СоответствиеПоНоменклатуре.Номенклатура,
	|	ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеПоНоменклатуре
	|ИЗ
	|	&ТЗ_СоответствиеПоНоменклатуре КАК ТЗ_СоответствиеПоНоменклатуре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	|	ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой КАК КоэфициентПереводаКБазовой
	|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеЕдиницИзмерений
	|ИЗ
	|	&ТЗ_СоответствиеЕдиницИзмерений КАК ТЗ_СоответствиеЕдиницИзмерений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//
	|Выбрать различные
	|	ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой,
	|	ВТ_ТЧМатериалыИзФайла.ТипНоменклатурыСтрокой,
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура,	
	|	ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ТЧМатериалыИзФайла КАК ВТ_ТЧМатериалыИзФайла
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеПоНоменклатуре КАК ВТ_ТЗ_СоответствиеПоНоменклатуре
	|		ПО ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой = ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений
	|		ПО ВТ_ТЧМатериалыИзФайла.ЕдиницаИзмеренияСтрокой = ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой
	|ГДЕ
	|	ВТ_ТЗ_СоответствиеПоНоменклатуре.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) И ВТ_ТЧМатериалыИзФайла.НоменклатураСтрокой <> """"";
	
КонецФункции

&НаСервере
Функция ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере()
	
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлуНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат ТабДок;
	КонецПопытки;
	
	НомерСтроки = 18;
	КолСтр = ТабДок.ВысотаТаблицы;
	
	Объект.ТЧМатериалыИзФайла.Очистить();
	Объект.СтроительнаяРаботаСтрокой 	= СтрЗаменить(СокрЛП(ТабДок.ПолучитьОбласть("R1C1").ТекущаяОбласть.Текст), ",", "");
	//Объект.НачалоРабот 					= Дата(Прав(ТабДок.ПолучитьОбласть("R15C8").ТекущаяОбласть.Текст, 4) + Сред(ТабДок.ПолучитьОбласть("R15C8").ТекущаяОбласть.Текст, 4, 2) + Лев(ТабДок.ПолучитьОбласть("R15C8").ТекущаяОбласть.Текст,2));
	//Объект.ОкончаниеРабот 				= Дата(Прав(ТабДок.ПолучитьОбласть("R15C9").ТекущаяОбласть.Текст, 4) + Сред(ТабДок.ПолучитьОбласть("R15C9").ТекущаяОбласть.Текст, 4, 2) + Лев(ТабДок.ПолучитьОбласть("R15C9").ТекущаяОбласть.Текст,2));
	
	//ПредыдущийАртикул = "";
	//ПредыдущийНомерПоПорядку = "";
	//ПредыдущееНазваниеРаботы = "";
	//ПредыдущийОбъемРаботы = 0;
	
	Артикул 						= "";
	НазваниеРаботыДляСпецификации 	= "";
	КоличествоРаботыДляСпецификации = 0;
	ЕдиницаИзмеренияСтрокойГП       = "";
	
	Для Сч = НомерСтроки по КолСтр Цикл
		
		Колонка1 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C1").ТекущаяОбласть.Текст);
		Колонка2 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C2").ТекущаяОбласть.Текст);
		Колонка3 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C3").ТекущаяОбласть.Текст);
		Колонка4 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C4").ТекущаяОбласть.Текст);
		Колонка12 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C12").ТекущаяОбласть.Текст);
		Колонка13 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C13").ТекущаяОбласть.Текст);
		
		
		//*- В колонке 2 сидят артикулы, которые, как оказалось не очень то и нужны
		Если ЗначениеЗаполнено(Колонка1) 
			//И ЗначениеЗаполнено(Колонка2) 
			И ЗначениеЗаполнено(Колонка3)
			И ЗначениеЗаполнено(Колонка4) Тогда
			
			КоличествоРаботыДляСпецификации = Число(ВернутьПервыйЭлементМассиваИзСтроки(Колонка4));
			
			Если НЕ КоличествоРаботыДляСпецификации > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Нпп								= Число(Колонка1);
			Артикул 						= Колонка2;
			НазваниеРаботыДляСпецификации 	= ВернутьПервыйЭлементМассиваИзСтроки(Колонка3);
			КоличествоРаботыДляСпецификации = КоличествоРаботыДляСпецификации;
			ЕдиницаИзмеренияСтрокойГП 		= Колонка12;
			
			
		ИначеЕсли ЗначениеЗаполнено(Колонка3) И ЗначениеЗаполнено(Колонка12) И ЗначениеЗаполнено(Колонка13)
			И НЕ ЗначениеЗаполнено(Колонка4) Тогда
			
			СтрокаДляДобавления = Объект.ТЧМатериалыИзФайла.Добавить();
			СтрокаДляДобавления.Нпп		 						= Нпп;
			СтрокаДляДобавления.Артикул 						= Артикул;
			СтрокаДляДобавления.НазваниеРаботыДляСпецификации 	= НазваниеРаботыДляСпецификации;
			СтрокаДляДобавления.КоличествоРаботыДляСпецификации = КоличествоРаботыДляСпецификации;
			СтрокаДляДобавления.ЕдиницаИзмеренияСтрокойГП       = ЕдиницаИзмеренияСтрокойГП;
			СтрокаДляДобавления.ЕдиницаИзмеренияСтрокой 		= Колонка12;
			Если ВРег(Колонка2) = "МПЗ" Тогда
				СтрокаДляДобавления.НоменклатураСтрокой 		= Колонка3
			ИначеЕсли ВРег(Колонка2) = "РАБОТА" Тогда
				СтрокаДляДобавления.НоменклатураСтрокой			= Объект.КодПроекта + " " + Колонка3;
			ИначеЕсли ВРег(Колонка2) = "МЕХАНИЗМ" Тогда
				СтрокаДляДобавления.НоменклатураСтрокой 		= "00000 " + Колонка3;
			КонецЕсли;
			СтрокаДляДобавления.Количество  					= Число(Колонка13);
			СтрокаДляДобавления.ЕдиницаИзмеренияСтрокой 		= Колонка12;
			СтрокаДляДобавления.ТипНоменклатурыСтрокой  		= Колонка2;	
			
		Иначе
			Прервать;
		КонецЕсли;
		

		
	КонецЦикла;
	
	
	ОбработатьДанныеСоответствияПоНоменклатуре();	
	ОбработатьДанныеСоответствияЕдиницИзмерения();
	
	

		
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ВернутьПервыйЭлементМассиваИзСтроки(Строка)
	
	МассивСтрок = СтрРазделить(Строка, Символы.ПС);
	Возврат ?(МассивСтрок.Количество() > 1, Лев(МассивСтрок[0], СтрДлина(МассивСтрок[0])-1), Строка);	
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеСоответствияЕдиницИзмерения()
	
	ТЗ = Объект.ТЧМатериалыИзФайла.Выгрузить(,"ЕдиницаИзмеренияСтрокой");
	ТЗ.Свернуть("ЕдиницаИзмеренияСтрокой");
	
	ТЗГП = Объект.ТЧМатериалыИзФайла.Выгрузить(,"ЕдиницаИзмеренияСтрокойГП");
	ТЗГП.Свернуть("ЕдиницаИзмеренияСтрокойГП");
	
	
	ТЗ2 = Объект.СоответствиеЕдиницИзмерений.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗ.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой
	                      |ПОМЕСТИТЬ ВТ_ПреТЗ
	                      |ИЗ
	                      |	&ТЗ КАК ТЗ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТЗГП.ЕдиницаИзмеренияСтрокойГП КАК ЕдиницаИзмеренияСтрокойГП
	                      |ПОМЕСТИТЬ ВТ_ПреТЗГП
	                      |ИЗ
	                      |	&ТЗГП КАК ТЗГП
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТЗ.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой
	                      |ПОМЕСТИТЬ ВТ_ТЗ
	                      |ИЗ
	                      |	ВТ_ПреТЗ КАК ТЗ
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ТЗГП.ЕдиницаИзмеренияСтрокойГП
	                      |ИЗ
	                      |	ВТ_ПреТЗГП КАК ТЗГП
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТЗ2.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	                      |	ТЗ2.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	                      |ПОМЕСТИТЬ ВТ_ТЗ2
	                      |ИЗ
	                      |	&ТЗ2 КАК ТЗ2
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	                      |	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
	                      |ИЗ
	                      |	ВТ_ТЗ КАК ВТ_ТЗ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	                      |		ПО (УпаковкиЕдиницыИзмерения.Наименование = ВТ_ТЗ.ЕдиницаИзмеренияСтрокой)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	                      |	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения
	                      |ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
	                      |ИЗ
	                      |	ВТ_ТЗ КАК ВТ_ТЗ
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ2.ЕдиницаИзмеренияСтрокой,
	                      |	ВТ_ТЗ2.ЕдиницаИзмерения
	                      |ИЗ
	                      |	ВТ_ТЗ2 КАК ВТ_ТЗ2
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	                      |	МАКСИМУМ(ВТ_ТЗ_Объединенное.ЕдиницаИзмерения) КАК ЕдиницаИзмерения
	                      |ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
	                      |ИЗ
	                      |	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	                      |	ВЫБОР
	                      |		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения = ЗНАЧЕНИЕ(СПРАВОЧНИК.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	                      |			ТОГДА ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения
	                      |		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
	                      |	КОНЕЦ КАК ЕдиницаИзмерения
	                      |ИЗ
	                      |	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
	                      |		ПО (ВТ_ПодобранныеПоНаименованию.ЕдиницаИзмеренияСтрокой = ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой)
	                      |ГДЕ
	                      |	ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой <> """"");
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	Запрос.УстановитьПараметр("ТЗГП", ТЗГП);
	Объект.СоответствиеЕдиницИзмерений.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


&НаСервере
Процедура ОбработатьДанныеСоответствияЕдиницИзмеренияИмпортаНоменклатуры()
	
	ТЗ = Объект.ТЧМатериалыИзФайла.Выгрузить(,"ЕдиницаИзмеренияСтрокой");
	ТЗ.Свернуть("ЕдиницаИзмеренияСтрокой");
	
	ТЗ2 = Объект.СоответствиеЕдиницИзмерений.Выгрузить();
	
	Запрос = Новый Запрос("
	|
	|ВЫБРАТЬ
	|	ТЗ.ЕдиницаИзмеренияСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ2.ЕдиницаИзмеренияСтрокой,
	|	ТЗ2.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ТЗ2
	|ИЗ
	|	&ТЗ2 КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО УпаковкиЕдиницыИзмерения.Наименование = ВТ_ТЗ.ЕдиницаИзмеренияСтрокой
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТЗ2.ЕдиницаИзмеренияСтрокой,
	|	ВТ_ТЗ2.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ТЗ2 КАК ВТ_ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой,
	|	МАКСИМУМ(ВТ_ТЗ_Объединенное.ЕдиницаИзмерения) КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
	|ИЗ
	|	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения = ЗНАЧЕНИЕ(СПРАВОЧНИК.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения
	|		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
	|	КОНЕЦ КАК ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
	|		ПО ВТ_ПодобранныеПоНаименованию.ЕдиницаИзмеренияСтрокой = ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой
	|ГДЕ
	|	ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой <> """"");
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	
	Объект.СоответствиеЕдиницИзмерений.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры


&НаСервере
Процедура ОбработатьДанныеСоответствияПоНоменклатуреМеталлоконструкций()
	
	ТЗ = Объект.Металлоконструкции.Выгрузить(,"НазваниеМатериала");
	ТЗ.Свернуть("НазваниеМатериала");
	
	ТЗ2 = Объект.СоответствиеПоНоменклатуре.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗ.НазваниеМатериала КАК НоменклатураСтрокой
	                      |ПОМЕСТИТЬ ВТ_ТЗ
	                      |ИЗ
	                      |	&ТЗ КАК ТЗ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТЗ2.НоменклатураСтрокой КАК НоменклатураСтрокой,
	                      |	ТЗ2.Номенклатура КАК Номенклатура
	                      |ПОМЕСТИТЬ ВТ_ТЗ2
	                      |ИЗ
	                      |	&ТЗ2 КАК ТЗ2
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ.НоменклатураСтрокой КАК НоменклатураСтрокой,
	                      |	МАКСИМУМ(Номенклатура.Ссылка) КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
	                      |ИЗ
	                      |	ВТ_ТЗ КАК ВТ_ТЗ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	                      |		ПО (Номенклатура.НаименованиеПолное = ВТ_ТЗ.НоменклатураСтрокой)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ТЗ.НоменклатураСтрокой
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ.НоменклатураСтрокой КАК НоменклатураСтрокой,
	                      |	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
	                      |ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
	                      |ИЗ
	                      |	ВТ_ТЗ КАК ВТ_ТЗ
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ2.НоменклатураСтрокой,
	                      |	ВТ_ТЗ2.Номенклатура
	                      |ИЗ
	                      |	ВТ_ТЗ2 КАК ВТ_ТЗ2
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ТЗ_Объединенное.НоменклатураСтрокой КАК НоменклатураСтрокой,
	                      |	МАКСИМУМ(ВТ_ТЗ_Объединенное.Номенклатура) КАК Номенклатура
	                      |ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
	                      |ИЗ
	                      |	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ТЗ_Объединенное.НоменклатураСтрокой
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой КАК НоменклатураСтрокой,
	                      |	ВЫБОР
	                      |		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.Номенклатура = ЗНАЧЕНИЕ(СПРАВОЧНИК.Номенклатура.ПустаяСсылка)
	                      |			ТОГДА ВТ_ПодготовленныйИзЗагрузки.Номенклатура
	                      |		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
	                      |	КОНЕЦ КАК Номенклатура
	                      |ИЗ
	                      |	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
	                      |		ПО (ВТ_ПодобранныеПоНаименованию.НоменклатураСтрокой = ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НоменклатураСтрокой");
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	
	Объект.СоответствиеПоНоменклатуре.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеСоответствияПоНоменклатуре()
	
	ТЗ = Объект.ТЧМатериалыИзФайла.Выгрузить(,"НоменклатураСтрокой");
	ТЗ.Свернуть("НоменклатураСтрокой");
	
	ТЗ2 = Объект.СоответствиеПоНоменклатуре.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	ТЗ.НоменклатураСтрокой
		|ПОМЕСТИТЬ ВТ_ТЗ
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ2.НоменклатураСтрокой,
		|	ТЗ2.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ТЗ2
		|ИЗ
		|	&ТЗ2 КАК ТЗ2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ.НоменклатураСтрокой,
		|	МАКСИМУМ(Номенклатура.Ссылка) КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
		|ИЗ
		|	ВТ_ТЗ КАК ВТ_ТЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО Номенклатура.НаименованиеПолное = ВТ_ТЗ.НоменклатураСтрокой
		| 			И ВТ_ТЗ.НоменклатураСтрокой <> """"
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЗ.НоменклатураСтрокой
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ.НоменклатураСтрокой,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
		|ИЗ
		|	ВТ_ТЗ КАК ВТ_ТЗ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТЗ2.НоменклатураСтрокой,
		|	ВТ_ТЗ2.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТ_ТЗ2 КАК ВТ_ТЗ2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ_Объединенное.НоменклатураСтрокой,
		|	МАКСИМУМ(ВТ_ТЗ_Объединенное.Номенклатура) КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
		|ИЗ
		|	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТЗ_Объединенное.НоменклатураСтрокой
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой,
		|	ВЫБОР
		|		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.Номенклатура = ЗНАЧЕНИЕ(СПРАВОЧНИК.Номенклатура.ПустаяСсылка)
		|			ТОГДА ВТ_ПодготовленныйИзЗагрузки.Номенклатура
		|		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
		|	КОНЕЦ КАК Номенклатура
		|ИЗ
		|	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
		|		ПО ВТ_ПодобранныеПоНаименованию.НоменклатураСтрокой = ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой");
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	Объект.СоответствиеПоНоменклатуре.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Результат = ХранилищеСистемныхНастроек.Загрузить( "ЗагрузкаНачальныхДанных", "СоответствиеЕдиницИзмерений");
	Если НЕ Результат = Неопределено Тогда 
		Объект.СоответствиеЕдиницИзмерений.Загрузить(Результат);
	КонецЕсли;
	Результат = ХранилищеСистемныхНастроек.Загрузить( "ЗагрузкаНачальныхДанных", "СоответствиеПоНоменклатуре");
	Если НЕ Результат = Неопределено Тогда 
		Объект.СоответствиеПоНоменклатуре.Загрузить(Результат);
	КонецЕсли;
	
	ЕдиницаИзмеренияШТ 		= Константы.ЕдиницаИзмеренияКоличестваШтук.Получить();
	ЕдиницаИзмеренияТонна 	= Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("т");
	ЕдиницаИзмеренияКГ		= Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию("кг");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	ХранилищеСистемныхНастроек.Сохранить( "ЗагрузкаНачальныхДанных", "СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
	ХранилищеСистемныхНастроек.Сохранить( "ЗагрузкаНачальныхДанных", "СоответствиеПоНоменклатуре", Объект.СоответствиеПоНоменклатуре.Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаМеталлоконструкцийОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаИмпортаНоменклатурыУППНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			
			НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаRkИмпортНоменклатуры", ЭтаФорма);
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выбор файла";
    ДиалогОткрытияФайла.Фильтр = "xls*-файлы(*.xls*)|*.xls*|";
    ДиалогОткрытияФайла.ИндексФильтра = 0;
    ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
    ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;

    НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура НазваниеФайлаИмпортаНоменклатурыУППОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлНоменклатуры(Команда)
	
	ТабличныйДокумент = ЗагрузитьНоменклатуруВТЗНоменклатуры();
	
	ТабличныйДокумент.Показать();
	
	//Если НЕ Отказ Тогда
		УдалитьФайлы(Объект.ПутьКФайлуНаСервере);

КонецПроцедуры

&НаСервере
Функция ЗагрузитьНоменклатуруВТЗНоменклатуры()
	
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлуНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат ТабДок;
	КонецПопытки;
	
	НомерСтроки = 2;
	КолСтр = ТабДок.ВысотаТаблицы;
	
	Объект.ИмпортНоменклатуры.Очистить();
		
	Для Сч = НомерСтроки по КолСтр Цикл
			
		СтрокаДляДобавления = Объект.ИмпортНоменклатуры.Добавить();
		СтрокаДляДобавления.Наименование 				= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C9").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.ПолноеНаименование 			= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C11").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.ЭтоГруппа 					= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C7").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.КодУПП 						= СтрЗаменить(СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C8").ТекущаяОбласть.Текст), Символы.НПП, "");
		СтрокаДляДобавления.ЕдиницаИзмерения 			= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C22").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.ЕдиницаИзмеренияДляОтчета 	= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C21").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.КодУППРодителя              = СтрЗаменить(СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C6").ТекущаяОбласть.Текст), Символы.НПП, "");
		СтрокаДляДобавления.Родитель	                = СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C5").ТекущаяОбласть.Текст);
		
	КонецЦикла;
	
	ОбработатьДанныеСоответствияЕдиницИзмеренияИмпортаНоменклатуры();
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьНоменклатуру(Команда)
	ЗаполнитьНоменклатуруНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.Наименование КАК Наименование,
	               |	ТЗ.ПолноеНаименование КАК ПолноеНаименование,
	               |	ТЗ.ЭтоГруппа КАК ЭтоГруппа,
	               |	ТЗ.КодУПП КАК КодУПП,
	               |	ТЗ.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТЗ.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ТЗ.КодУППРодителя КАК КодУППРодителя,
	               |	ТЗ.Родитель КАК Родитель
	               |ПОМЕСТИТЬ ВТ_ИмпортНоменклатуры
	               |ИЗ
	               |	&ИмпортНоменклатуры КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ИмпортНоменклатуры.Наименование КАК Наименование,
	               |	ВТ_ИмпортНоменклатуры.ПолноеНаименование КАК ПолноеНаименование,
	               |	ВТ_ИмпортНоменклатуры.ЭтоГруппа КАК ЭтоГруппа,
	               |	ВТ_ИмпортНоменклатуры.КодУПП КАК КодУПП,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ИмпортНоменклатуры.КодУППРодителя КАК КодУППРодителя,
	               |	ВТ_ИмпортНоменклатуры.Родитель КАК Родитель,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА НЕ ВТ_ИмпортНоменклатуры.Родитель = """"
	               |				ТОГДА Родители.Ссылка
	               |			ИНАЧЕ ЗНАЧЕНИЕ(СПРАВОЧНИК.НОМЕНКЛАТУРА.ПУСТАЯССЫЛКА)
	               |		КОНЕЦ) КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_ГруппыТолькоСРодителями
	               |ИЗ
	               |	ВТ_ИмпортНоменклатуры КАК ВТ_ИмпортНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Родители
	               |		ПО (ВТ_ИмпортНоменклатуры.Родитель + "" ("" + ВТ_ИмпортНоменклатуры.КодУППРодителя + "")"" = Родители.Наименование)
	               |			И (Родители.ЭтоГруппа)
	               |			И (ВТ_ИмпортНоменклатуры.ЭтоГруппа = ""Да"")
	               |ГДЕ
	               |	(НЕ Родители.Ссылка ЕСТЬ NULL
	               |			ИЛИ ВТ_ИмпортНоменклатуры.Родитель = """")
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ИмпортНоменклатуры.КодУПП,
	               |	ВТ_ИмпортНоменклатуры.Наименование,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ИмпортНоменклатуры.ЭтоГруппа,
	               |	ВТ_ИмпортНоменклатуры.КодУППРодителя,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмерения,
	               |	ВТ_ИмпортНоменклатуры.Родитель,
	               |	ВТ_ИмпортНоменклатуры.ПолноеНаименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ИмпортНоменклатуры.Наименование КАК Наименование,
	               |	ВТ_ИмпортНоменклатуры.ПолноеНаименование КАК ПолноеНаименование,
	               |	ВТ_ИмпортНоменклатуры.ЭтоГруппа КАК ЭтоГруппа,
	               |	ВТ_ИмпортНоменклатуры.КодУПП КАК КодУПП,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ИмпортНоменклатуры.КодУППРодителя КАК КодУППРодителя,
	               |	ВТ_ИмпортНоменклатуры.Родитель КАК Родитель,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА НЕ ВТ_ИмпортНоменклатуры.Родитель = """"
	               |				ТОГДА Родители.Ссылка
	               |			ИНАЧЕ ЗНАЧЕНИЕ(СПРАВОЧНИК.НОМЕНКЛАТУРА.ПУСТАЯССЫЛКА)
	               |		КОНЕЦ) КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_ТолькоСРодителями
	               |ИЗ
	               |	ВТ_ИмпортНоменклатуры КАК ВТ_ИмпортНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Родители
	               |		ПО (ВТ_ИмпортНоменклатуры.Родитель + "" ("" + ВТ_ИмпортНоменклатуры.КодУППРодителя + "")"" = Родители.Наименование)
	               |			И (Родители.ЭтоГруппа)
	               |			И (ВТ_ИмпортНоменклатуры.ЭтоГруппа = ""Нет"")
	               |ГДЕ
	               |	(НЕ Родители.Ссылка ЕСТЬ NULL
	               |			ИЛИ ВТ_ИмпортНоменклатуры.Родитель = """") И (ВТ_ИмпортНоменклатуры.ЭтоГруппа = ""Нет"")
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ИмпортНоменклатуры.КодУПП,
	               |	ВТ_ИмпортНоменклатуры.Наименование,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ИмпортНоменклатуры.ЭтоГруппа,
	               |	ВТ_ИмпортНоменклатуры.КодУППРодителя,
	               |	ВТ_ИмпортНоменклатуры.ЕдиницаИзмерения,
	               |	ВТ_ИмпортНоменклатуры.Родитель,
	               |	ВТ_ИмпортНоменклатуры.ПолноеНаименование
				   |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ГруппыТолькоСРодителями.Наименование КАК Наименование,
	               |	ВТ_ГруппыТолькоСРодителями.ПолноеНаименование КАК ПолноеНаименование,
	               |	ВТ_ГруппыТолькоСРодителями.ЭтоГруппа КАК ЭтоГруппа,
	               |	ВТ_ГруппыТолькоСРодителями.КодУПП КАК КодУПП,
	               |	ВТ_ГруппыТолькоСРодителями.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_ГруппыТолькоСРодителями.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ГруппыТолькоСРодителями.КодУППРодителя КАК КодУППРодителя,
	               |	ВТ_ГруппыТолькоСРодителями.Родитель КАК Родитель,
	               |	ВТ_ГруппыТолькоСРодителями.Ссылка КАК РодительСсылка,
	               |	МАКСИМУМ(Номенклатура.Ссылка) КАК РабочаяСсылка
	               |ПОМЕСТИТЬ ВТ_Группы
	               |ИЗ
	               |	ВТ_ГруппыТолькоСРодителями КАК ВТ_ГруппыТолькоСРодителями
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	               |		ПО ВТ_ГруппыТолькоСРодителями.Ссылка = Номенклатура.Родитель
	               |			И (ВТ_ГруппыТолькоСРодителями.Наименование + "" ("" + ВТ_ГруппыТолькоСРодителями.КодУПП + "")"" = Номенклатура.Наименование)
	               |			И (Номенклатура.ЭтоГруппа)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ГруппыТолькоСРодителями.КодУПП,
	               |	ВТ_ГруппыТолькоСРодителями.Наименование,
	               |	ВТ_ГруппыТолькоСРодителями.ЕдиницаИзмерения,
	               |	ВТ_ГруппыТолькоСРодителями.ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ГруппыТолькоСРодителями.КодУППРодителя,
	               |	ВТ_ГруппыТолькоСРодителями.Ссылка,
	               |	ВТ_ГруппыТолькоСРодителями.ЭтоГруппа,
	               |	ВТ_ГруппыТолькоСРодителями.Родитель,
	               |	ВТ_ГруппыТолькоСРодителями.ПолноеНаименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДополнительныеСведения.Объект КАК Объект,
	               |	ДополнительныеСведения.Свойство КАК Свойство,
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ПОМЕСТИТЬ ВТ_НоменклатураУПП
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Объект ССЫЛКА Справочник.Номенклатура
	               |	И ДополнительныеСведения.Свойство.Имя = ""КодУПП""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой КАК ЕдиницаИзмеренияСтрокой,
	               |	ТЗ_СоответствиеЕдиницИзмерений.КоэфициентПереводаКБазовой КАК КоэфициентПереводаКБазовой
	               |ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеЕдиницИзмерений
	               |ИЗ
	               |	&СоответствиеЕдиницИзмерений КАК ТЗ_СоответствиеЕдиницИзмерений
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТолькоСРодителями.Наименование КАК Наименование,
	               |	ВТ_ТолькоСРодителями.ПолноеНаименование КАК ПолноеНаименование,
	               |	ВТ_ТолькоСРодителями.ЭтоГруппа КАК ЭтоГруппа,
	               |	ВТ_ТолькоСРодителями.КодУПП КАК КодУПП,
	               |	ВТ_ТолькоСРодителями.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_ТолькоСРодителями.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ТолькоСРодителями.КодУППРодителя КАК КодУППРодителя,
	               |	ВТ_ТолькоСРодителями.Родитель КАК Родитель,
	               |	ВТ_ТолькоСРодителями.Ссылка КАК Ссылка,
	               |	МАКСИМУМ(ВТ_НоменклатураУПП.Объект) КАК Объект,
	               |	МАКСИМУМ(ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмерения) КАК ЕдиницаИзмерения1,
	               |	МАКСИМУМ(ВТ_ТЗ_СоответствиеЕдиницИзмерений1.ЕдиницаИзмерения) КАК ЕдиницаИзмерения2
	               |ПОМЕСТИТЬ ВТ_Номенклатура
	               |ИЗ
	               |	ВТ_ТолькоСРодителями КАК ВТ_ТолькоСРодителями
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатураУПП КАК ВТ_НоменклатураУПП
	               |		ПО ВТ_ТолькоСРодителями.КодУПП = ВТ_НоменклатураУПП.Значение
	               |			И ВТ_ТолькоСРодителями.Ссылка = ВТ_НоменклатураУПП.Объект.Родитель
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений
	               |		ПО ВТ_ТолькоСРодителями.ЕдиницаИзмерения = ВТ_ТЗ_СоответствиеЕдиницИзмерений.ЕдиницаИзмеренияСтрокой
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТЗ_СоответствиеЕдиницИзмерений КАК ВТ_ТЗ_СоответствиеЕдиницИзмерений1
	               |		ПО ВТ_ТолькоСРодителями.ЕдиницаИзмеренияДляОтчета = ВТ_ТЗ_СоответствиеЕдиницИзмерений1.ЕдиницаИзмеренияСтрокой
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ТолькоСРодителями.КодУПП,
	               |	ВТ_ТолькоСРодителями.ЭтоГруппа,
	               |	ВТ_ТолькоСРодителями.ПолноеНаименование,
	               |	ВТ_ТолькоСРодителями.Ссылка,
	               |	ВТ_ТолькоСРодителями.ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_ТолькоСРодителями.КодУППРодителя,
	               |	ВТ_ТолькоСРодителями.ЕдиницаИзмерения,
	               |	ВТ_ТолькоСРодителями.Наименование,
	               |	ВТ_ТолькоСРодителями.Родитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Группы.Наименование КАК Наименование,
	               |	ВТ_Группы.ПолноеНаименование КАК ПолноеНаименование,
	               |	ВТ_Группы.ЭтоГруппа КАК ЭтоГруппа,
	               |	ВТ_Группы.КодУПП КАК КодУПП,
	               |	ВТ_Группы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_Группы.ЕдиницаИзмеренияДляОтчета КАК ЕдиницаИзмеренияДляОтчета,
	               |	ВТ_Группы.КодУППРодителя КАК КодУППРодителя,
	               |	ВТ_Группы.Родитель КАК Родитель,
	               |	ВТ_Группы.РодительСсылка КАК РодительСсылка,
	               |	ВТ_Группы.РабочаяСсылка КАК РабочаяСсылка,
	               |	NULL КАК ЕдиницаИзмеренияСсылкой,
	               |	NULL КАК ЕдиницаИзмеренияДляОтчетаСсылкой
	               |ИЗ
	               |	ВТ_Группы КАК ВТ_Группы
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
				   |ВЫБРАТЬ
				   |	ВТ_Номенклатура.Наименование,
				   |	ВТ_Номенклатура.ПолноеНаименование,
				   |	ВТ_Номенклатура.ЭтоГруппа,
				   |	ВТ_Номенклатура.КодУПП,
				   |	ВТ_Номенклатура.ЕдиницаИзмерения,
				   |	ВТ_Номенклатура.ЕдиницаИзмеренияДляОтчета,
				   |	ВТ_Номенклатура.КодУППРодителя,
				   |	ВТ_Номенклатура.Родитель,
				   |	ВТ_Номенклатура.Ссылка,
				   |	ВТ_Номенклатура.Объект,
				   |	ВТ_Номенклатура.ЕдиницаИзмерения1,
				   |	ВТ_Номенклатура.ЕдиницаИзмерения2
				   |ИЗ
				   |	ВТ_Номенклатура КАК ВТ_Номенклатура
				   |";
	
	
	Запрос.УстановитьПараметр("ИмпортНоменклатуры", Объект.ИмпортНоменклатуры.Выгрузить());
	Запрос.УстановитьПараметр("СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		//*-Пока не ясно, будем ли мы обновлять имеющуюся номенклатуру;
		Если Выборка.ЭтоГруппа Тогда
			Если ЗначениеЗаполнено(Выборка.РабочаяСсылка) Тогда
				НоменклатураОбъект = Выборка.РабочаяСсылка.ПолучитьОбъект();
			Иначе
				НоменклатураОбъект = Справочники.Номенклатура.СоздатьГруппу();
			КонецЕсли;
			НоменклатураОбъект.Наименование = Выборка.Наименование + " (" + Выборка.КодУПП  + ")";
			НоменклатураОбъект.Родитель = Выборка.РодительСсылка;
			НоменклатураОбъект.Записать();
			
		Иначе
			Если ЗначениеЗаполнено(Выборка.РабочаяСсылка) Тогда
				Продолжить;
				НоменклатураОбъект = Выборка.РабочаяСсылка.ПолучитьОбъект();
			Иначе
				НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
			КонецЕсли;
			НоменклатураОбъект.Наименование 				= Выборка.Наименование;
			НоменклатураОбъект.НаименованиеПолное 			= Выборка.ПолноеНаименование;
			НоменклатураОбъект.ЕдиницаИзмерения   			= Выборка.ЕдиницаИзмеренияСсылкой;
	        НоменклатураОбъект.ЕдиницаДляОтчетов  			= Выборка.ЕдиницаИзмеренияДляОтчетаСсылкой;
			НоменклатураОбъект.КоэффициентЕдиницыДляОтчетов	= 1;
			НоменклатураОбъект.ГруппаАналитическогоУчета 	= Объект.ГруппаАналитическогоУчета;
			НоменклатураОбъект.ВидНоменклатуры 				= Объект.ВидНоменклатуры;
			НоменклатураОбъект.ГруппаФинансовогоУчета 		= Объект.ГруппаФинансовогоУчета;
			НоменклатураОбъект.ИспользованиеХарактеристик 	= Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
			НоменклатураОбъект.Качество 					= Перечисления.ГрадацииКачества.Новый;
			НоменклатураОбъект.СтавкаНДС 					= Перечисления.СтавкиНДС.НДС20;
			НоменклатураОбъект.ТипНоменклатуры 				= Перечисления.ТипыНоменклатуры.Товар;
			НоменклатураОбъект.ОсобенностьУчета 			= Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
			НоменклатураОбъект.ВариантОформленияПродажи		= Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
			Если ЗначениеЗаполнено(Выборка.ЕдиницаИзмеренияСсылкой) Тогда
				Если Выборка.ЕдиницаИзмеренияСсылкой.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Вес Тогда
					
					НоменклатураОбъект.ВесЕдиницаИзмерения  			= Выборка.ЕдиницаИзмерения;
					НоменклатураОбъект.ВесЗнаменатель 					= 1;
					НоменклатураОбъект.ВесИспользовать 					= Истина;
					НоменклатураОбъект.ВесМожноУказыватьВДокументах 	= Истина;
					НоменклатураОбъект.ВесЧислитель 					= 1;
							
				ИначеЕсли Выборка.ЕдиницаИзмеренияСсылкой.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Объем Тогда
				
					НоменклатураОбъект.ОбъемЕдиницаИзмерения  			= Выборка.ЕдиницаИзмерения;
					НоменклатураОбъект.ОбъемЗнаменатель 				= 1;
					НоменклатураОбъект.ОбъемИспользовать 				= Истина;
					НоменклатураОбъект.ОбъемМожноУказыватьВДокументах 	= Истина;
					НоменклатураОбъект.ОбъемЧислитель = 1;
				
				ИначеЕсли Выборка.ЕдиницаИзмеренияСсылкой.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Площадь Тогда
					
					НоменклатураОбъект.ПлощадьЕдиницаИзмерения  		= Выборка.ЕдиницаИзмерения;
					НоменклатураОбъект.ПлощадьЗнаменатель 				= 1;
					НоменклатураОбъект.ПлощадьИспользовать 				= Истина;
					НоменклатураОбъект.ПлощадьМожноУказыватьВДокументах = Истина;
					НоменклатураОбъект.ПлощадьЧислитель 				= 1;
							
				КонецЕсли;
			КонецЕсли;
			//ЗаписатьВ регистрсведений
			НоменклатураОбъект.Родитель = Выборка.РодительСсылка;
			НоменклатураОбъект.Записать();
			
			Запись       	= РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
	        Запись.Объект   = НоменклатураОбъект.Ссылка;
	        Запись.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "КодУПП");
	        Запись.Значение = Выборка.КодУПП;
	        Запись.Записать(Истина);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаИмпортаОстатковОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаИмпортаОстатковНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			
			НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаRkИмпортОстатков", ЭтаФорма);
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выбор файла";
    ДиалогОткрытияФайла.Фильтр = "xls*-файлы(*.xls*)|*.xls*|";
    ДиалогОткрытияФайла.ИндексФильтра = 0;
    ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
    ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;

    НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьФайлОстатков(Команда)
	
	ТабличныйДокумент = ЗагрузитьОстаткиВТЗОстатки();
	
	ТабличныйДокумент.Показать();
	
	//Если НЕ Отказ Тогда
	УдалитьФайлы(Объект.ПутьКФайлуНаСервере);
КонецПроцедуры


&НаСервере
Функция ЗагрузитьОстаткиВТЗОстатки()
	
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлуНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат ТабДок;
	КонецПопытки;
	
	НомерСтроки = 12;
	КолСтр = ТабДок.ВысотаТаблицы;
	
	Объект.Остатки.Очистить();
	ТекущаяОрганизация = "";
	ТекущийСклад = "";
	ЗаголовокПервойГруппы = "";
	ЗаголовокВторойГруппы = "";
	КоличествоГруппировок = 0;
	
	Для Сч = НомерСтроки по КолСтр Цикл
		Если СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C6").ТекущаяОбласть.Текст) = "" Тогда
			
			КоличествоГруппировок = КоличествоГруппировок + 1;
			Если КоличествоГруппировок = 1 Тогда
				ЗаголовокПервойГруппы = СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C1").ТекущаяОбласть.Текст);	
			КонецЕсли;
			Если КоличествоГруппировок = 2 Тогда
				ЗаголовокВторойГруппы = СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C1").ТекущаяОбласть.Текст);	
			КонецЕсли;
			Продолжить;
		Иначе
			Если КоличествоГруппировок = 1 Тогда
				ТекущийСклад = ЗаголовокПервойГруппы;
			ИначеЕсли КоличествоГруппировок = 2 Тогда
				ТекущаяОрганизация = ЗаголовокПервойГруппы;
				ТекущийСклад = ЗаголовокВторойГруппы;
			КонецЕсли; 
			ЗаголовокПервойГруппы = "";
			ЗаголовокВторойГруппы = ""; 
			КоличествоГруппировок = 0;
		КонецЕсли;
		Если СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C13").ТекущаяОбласть.Текст) = "0" Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДляДобавления = Объект.Остатки.Добавить();
		СтрокаДляДобавления.НоменклатураСтрока 				= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C1").ТекущаяОбласть.Текст);
		СтрокаДляДобавления.НоменклатураКодСтрока 			= СтрЗаменить(СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C4").ТекущаяОбласть.Текст), Символы.НПП, "");
		СтрокаДляДобавления.ОрганизацияИНН 					= СтрЗаменить(ТекущаяОрганизация, Символы.НПП, "");
		СтрокаДляДобавления.СкладСтрока 					= ТекущийСклад;
		СтрокаДляДобавления.ЕдиницаИзмерения 				= СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C6").ТекущаяОбласть.Текст);
		Попытка
			СтрокаДляДобавления.Количество 						= Число(СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C13").ТекущаяОбласть.Текст));
		Исключение
			Сообщить("Возникла ошибка:" + ОписаниеОшибки());
		КонецПопытки;
		Попытка
			СтрокаДляДобавления.Сумма              				= Число(СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C14").ТекущаяОбласть.Текст));
		Исключение
			Сообщить("Возникла ошибка:" + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
	//ОбработатьДанныеСоответствияЕдиницИзмеренияДляОтчетаИмпортаНоменклатуры();
	//ОбработатьДанныеСоответствияЕдиницИзмеренияИмпортаНоменклатуры();
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьОстатки(Команда)
	ЗаполнитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиНаСервере()
	
	Результат = ВернутьРезультатЗапросаПоОстаткам();
	
	ВыборкаПоОрганизациям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерДляПартии = 1;
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		ВыборкаПоСкладам = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			ДокументВводаОстатков = Документы.ВводОстатков.СоздатьДокумент();
			
			ЗаполнитьЗначенияСвойств(ДокументВводаОстатков, ВыборкаПоСкладам);
			ДокументВводаОстатков.Партия = СоздатьИВернутьПартию(ВыборкаПоСкладам, НомерДляПартии);
			
			ВыборкаДетальныхЗаписей = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
				
				СтрокаОстатков = ДокументВводаОстатков.Товары.Добавить();
				
				ЗаполнитьЗначенияСвойств(СтрокаОстатков, ВыборкаДетальныхЗаписей);
				
			КонецЦикла;
			
			НомерДляПартии = НомерДляПартии + 1;
			ДокументВводаОстатков.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры


Функция ВернутьРезультатЗапросаПоОстаткам()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ_Остатки.СкладСтрока КАК СкладСтрока,
	               |	ТЗ_Остатки.НоменклатураСтрока КАК НоменклатураСтрока,
	               |	ТЗ_Остатки.НоменклатураКодСтрока КАК НоменклатураКодСтрока,
	               |	ТЗ_Остатки.ОрганизацияИНН КАК ОрганизацияИНН,
	               |	ТЗ_Остатки.Количество КАК Количество,
	               |	ТЗ_Остатки.Сумма КАК Сумма,
	               |	ТЗ_Остатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ПОМЕСТИТЬ ВТ_Остатки
	               |ИЗ
	               |	&ТЗ_Остатки КАК ТЗ_Остатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ДоговорыКонтрагентов.Ссылка) КАК Договор,
	               |	ДоговорыКонтрагентов.Организация КАК Организация
	               |ПОМЕСТИТЬ ВТ_Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Партнер = &Партнер
	               |	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДоговорыКонтрагентов.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СкладыДополнительныеРеквизиты.Ссылка КАК Склад,
	               |	СкладыДополнительныеРеквизиты.Свойство КАК Свойство,
	               |	СкладыДополнительныеРеквизиты.Значение.Наименование КАК Значение
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Справочник.Склады.ДополнительныеРеквизиты КАК СкладыДополнительныеРеквизиты
	               |ГДЕ
	               |	СкладыДополнительныеРеквизиты.Свойство.Имя = ""НаименованиеСкладаВУПП""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДополнительныеСведения.Объект КАК Номенклатура,
	               |	ДополнительныеСведения.Свойство КАК Свойство,
	               |	ДополнительныеСведения.Значение КАК Значение
	               |ПОМЕСТИТЬ ВТ_Номенклатура
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Свойство.Имя = ""КодУПП""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Валюты.Ссылка КАК Валюта
	               |ПОМЕСТИТЬ ВТ_ВалютаРуб
	               |ИЗ
	               |	Справочник.Валюты КАК Валюты
	               |ГДЕ
	               |	Валюты.Код = ""643""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	               |	ВТ_Номенклатура.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	               |	ВТ_Остатки.ОрганизацияИНН КАК ОрганизацияИНН,
	               |	ВТ_Остатки.Количество КАК Количество,
	               |	ВТ_Остатки.Количество КАК КоличествоУпаковок,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК Сумма,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК СуммаВР,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК СуммаПР,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК СуммаДокумента,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК СуммаРегл,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ КАК СуммаСНДС,
	               |	ВТ_Остатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ВТ_Склады.Склад КАК Склад,
	               |	Организации.Ссылка КАК Организация,
	               |	ВТ_Остатки.НоменклатураСтрока КАК НоменклатураСтрока,
	               |	ВТ_Остатки.НоменклатураКодСтрока КАК НоменклатураКодСтрока,
	               |	ВТ_Остатки.СкладСтрока КАК СкладСтрока,
	               |	ВТ_Договоры.Договор КАК Договор,
	               |	ВТ_Договоры.Договор.Контрагент КАК Контрагент,
	               |	ВТ_Договоры.Договор.ПорядокРасчетов КАК ПорядокРасчетов,
	               |	ВТ_Договоры.Договор.Партнер КАК Партнер,
	               |	ВТ_Договоры.Договор.Менеджер КАК Менеджер,
	               |	ВТ_Склады.Склад.Подразделение КАК Подразделение,
	               |	ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров) КАК ТипОперации,
	               |	ИСТИНА КАК ОтражатьВОперативномУчете,
	               |	ИСТИНА КАК ОтражатьСебестоимость,
	               |	ИСТИНА КАК ОтражатьВБУиНУ,
	               |	ИСТИНА КАК ОтражатьВУУ,
	               |	ИСТИНА КАК ЦенаВключаетНДС,
	               |	ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.УдалитьРазделыВводаНачальныхОстатков.ОперативныйИРегламентированныйУчет) КАК УдалитьРазделУчета,
	               |	ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыЦенностей.Товары) КАК ВидЦенностиНДС,
	               |	ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ВидДеятельностиНДС,
	               |	ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ТипыПервичныхДокументов.ПриобретениеУПоставщика) КАК ТипПервичногоДокумента,
	               |	&ТекущийПользователь КАК Ответственный,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ / ВТ_Остатки.Количество КАК Цена,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ * 0.8 КАК СуммаБезНДС,
	               |	ВЫБОР
	               |		КОГДА ВТ_Остатки.Сумма = 0
	               |			ТОГДА 0.01
	               |		ИНАЧЕ ВТ_Остатки.Сумма
	               |	КОНЕЦ * 0.2 КАК СуммаНДС,
	               |	ВТ_ВалютаРуб.Валюта КАК Валюта,
				   |	&ДатаДокумента КАК Дата,
				   |	&ДатаДокумента КАК ДатаВходящегоДокумента
	               |ИЗ
	               |	ВТ_Остатки КАК ВТ_Остатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Договоры КАК ВТ_Договоры
	               |			ПО Организации.Ссылка = ВТ_Договоры.Организация
	               |		ПО ВТ_Остатки.ОрганизацияИНН = Организации.ИНН
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	               |		ПО (ВТ_Номенклатура.Значение = ВТ_Остатки.НоменклатураКодСтрока)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	               |		ПО (ВТ_Склады.Значение = ВТ_Остатки.СкладСтрока),
	               |	ВТ_ВалютаРуб КАК ВТ_ВалютаРуб
	               |ГДЕ
	               |	НЕ ВТ_Остатки.Количество = 0
	               |ИТОГИ
	               |	МАКСИМУМ(Номенклатура),
	               |	СУММА(Сумма),
	               |	СУММА(СуммаРегл),
				   |	СУММА(СуммаДокумента),
	               |	МАКСИМУМ(ЕдиницаИзмерения),
	               |	МАКСИМУМ(Склад),
	               |	МАКСИМУМ(Организация),
	               |	МАКСИМУМ(НоменклатураСтрока),
	               |	МАКСИМУМ(НоменклатураКодСтрока),
	               |	МАКСИМУМ(Договор),
	               |	МАКСИМУМ(Контрагент),
	               |	МАКСИМУМ(ПорядокРасчетов),
	               |	МАКСИМУМ(Партнер),
	               |	МАКСИМУМ(Менеджер),
	               |	МАКСИМУМ(Подразделение),
	               |	МАКСИМУМ(ТипОперации),
	               |	МАКСИМУМ(ОтражатьВОперативномУчете),
	               |	МАКСИМУМ(ОтражатьСебестоимость),
	               |	МАКСИМУМ(ОтражатьВБУиНУ),
	               |	МАКСИМУМ(ОтражатьВУУ),
	               |	МАКСИМУМ(ЦенаВключаетНДС),
	               |	МАКСИМУМ(УдалитьРазделУчета),
				   |	МАКСИМУМ(ТипПервичногоДокумента),
	               |	МАКСИМУМ(ВидЦенностиНДС),
	               |	МАКСИМУМ(ВидДеятельностиНДС),
	               |	МАКСИМУМ(Ответственный),
				   |	МАКСИМУМ(Дата),
				   |	МАКСИМУМ(ДатаВходящегоДокумента),
	               |	МАКСИМУМ(Валюта)
	               |ПО
	               |	ОрганизацияИНН,
	               |	СкладСтрока";
	Запрос.УстановитьПараметр("ТЗ_Остатки", 			Объект.Остатки.Выгрузить());
	Запрос.УстановитьПараметр("Партнер", 				Объект.Партнер);
	Запрос.УстановитьПараметр("ТекущийПользователь", 	ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ДатаДокумента", 			Дата(2021,5,31,23,59,59));
	Результат = Запрос.Выполнить();
	
	
	Возврат Результат;
	
	
КонецФункции

Функция СоздатьИВернутьПартию(ВыборкаПоСкладам, НомерДляПартии)
	
	
	ДокументОбъект = Документы.ПервичныйДокумент.СоздатьДокумент();
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаПоСкладам);
	ДокументОбъект.НомерВходящегоДокумента = НомерДляПартии;
	ДокументОбъект.Номер = НомерДляПартии;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат ДокументОбъект.Ссылка; 
	
КонецФункции
