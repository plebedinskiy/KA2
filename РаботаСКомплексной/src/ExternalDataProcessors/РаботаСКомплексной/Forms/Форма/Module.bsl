
&НаКлиенте
Процедура НазваниеФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	#Если ВебКлиент Тогда
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
			
			НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
			ПодключитьРасширениеРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьВыборФайлаRk", ЭтаФорма);
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выбор файла";
    ДиалогОткрытияФайла.Фильтр = "xls*-файлы(*.xls*)|*.xls*|";
    ДиалогОткрытияФайла.ИндексФильтра = 0;
    ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
    ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь;

    НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогОткрытияФайла, Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ПередЗакрытиемНаСервере();
	СохранитьНастройкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ПутьКФайлуНаСервере) Тогда
		Файл = Новый Файл(Объект.ПутьКФайлуНаСервере);
		Если Файл.Существует() Тогда
			УдалитьФайлы(Объект.ПутьКФайлуНаСервере);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаRk(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт

    Если ПомещенныеФайлы = Неопределено Тогда
        Возврат;
    КонецЕсли;

	Для каждого ПереданныйФайл Из ПомещенныеФайлы Цикл
		
        Адрес = ПереданныйФайл.Хранение;
		Объект.НазваниеФайла = ПереданныйФайл.ПолноеИмя;
		
    КонецЦикла;
    
    RkНаСервере(Адрес);

КонецПроцедуры

&НаСервере
Процедура RkНаСервере(Адрес)
    
    ФайлДляЗагрузки = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес));
    Объект.ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла("xlsx");
    ФайлДляЗагрузки = ФайлДляЗагрузки.Получить();
    ФайлДляЗагрузки.Записать(Объект.ПутьКФайлуНаСервере);
         
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	
	//Отказ = ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере();
	
	ТабличныйДокумент = ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере();
	
	ТабличныйДокумент.Показать();
	
	//Если НЕ Отказ Тогда
		УдалитьФайлы(Объект.ПутьКФайлуНаСервере);
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	//Проверить соответствие всех единиц измерений
	ЭтоУспех = ВернутьРезультатПроверкиЗаполненияЕдиницИзмерения();
	
	Если НЕ ЭтоУспех Тогда
		Возврат;
	КонецЕсли;
		
	ЗаполнитьНоменклатуруВСоответствии();
	СоздатьСтроительнуюРаботуИЗаполнитьМатериалы();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСтроительнуюРаботуИЗаполнитьМатериалы()
	//TODO: Реализация
КонецПроцедуры

&НаСервере
Функция ВернутьРезультатПроверкиЗаполненияЕдиницИзмерения()
	
	Отбор = Новый Структура("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	Строки = Объект.СоответствиеЕдиницИзмерений.НайтиСтроки(Отбор);
	Результат = Строки.Количество() = 0;
	Если НЕ Результат Тогда
		Сообщить("Не заполнены соответствия единицы измерения");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНоменклатуруВСоответствии()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
		|	ТЗ_СоответствиеПоНоменклатуре.Номенклатура,
		|	ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
		|ПОМЕСТИТЬ ВТ_ТЗ_СоответствиеПоНоменклатуре
		|ИЗ
		|	&ТЗ_СоответствиеПоНоменклатуре КАК ТЗ_СоответствиеПоНоменклатуре
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|Выбрать
		|	Номенклатура.Ссылка КАК Ссылка,
		|	ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой
		|ИЗ
		|	ВТ_ТЗ_СоответствиеПоНоменклатуре КАК ВТ_ТЗ_СоответствиеПоНоменклатуре
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_ТЗ_СоответствиеПоНоменклатуре.НоменклатураСтрокой = Номенклатура.Наименование
		|ГДЕ
		|	Номенклатура.Ссылка ЕСТЬ NULL";

	Запрос.УстановитьПараметр("ТЗ_СоответствиеПоНоменклатуре", Объект.ТЗ_СоответствиеПоНоменклатуре.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
	
		НоваяНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
		НоваяНоменклатура.Наименование = Выборка.НоменклатураСтрокой;
		НоваяНоменклатура.Записать();	
	
	КонецЦикла;
	
	ОтменитьТранзакцию();
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьМатериалыВСтроительнуюРаботуНаСервере();
	ТабДок = Новый ТабличныйДокумент;
	Попытка
		ТабДок.Прочитать(Объект.ПутьКФайлуНаСервере, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		Возврат Истина;
	КонецПопытки;
	
	НомерСтроки = 15;
	КолСтр = ТабДок.ВысотаТаблицы;
	
	Объект.ТЧМатериалыИзФайла.Очистить();
	Объект.СтроительнаяРаботаСтрокой = СтрЗаменить(СокрЛП(ТабДок.ПолучитьОбласть("R7C2").ТекущаяОбласть.Текст), ",", "");
		
	Для Сч = НомерСтроки по КолСтр Цикл
		
		НоменклатураСтрокой 	= ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C3").ТекущаяОбласть.Текст;
		ЕдиницыИзмеренияСтрокой = СокрЛП(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C4").ТекущаяОбласть.Текст);
		Количество		 		= Формат(ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C5").ТекущаяОбласть.Текст,"ЧГ=0");
		
		Если Не ЗначениеЗаполнено(НоменклатураСтрокой) Тогда
			Прервать;		
		КонецЕсли;
		
		СтрокаДляДобавления 						= Объект.ТЧМатериалыИзФайла.Добавить();
		СтрокаДляДобавления.НоменклатураСтрокой 	= НоменклатураСтрокой;
		СтрокаДляДобавления.ЕдиницаИзмеренияСтрокой = ЕдиницыИзмеренияСтрокой;
		СтрокаДляДобавления.Количество 				= Число(Количество);		
			
	КонецЦикла;
	
	
	ОбработатьДанныеСоответствияПоНоменклатуре();	
	ОбработатьДанныеСоответствияЕдиницИзмерения();
	
	

		
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Процедура ОбработатьДанныеСоответствияЕдиницИзмерения()
	
	ТЗ = Объект.ТЧМатериалыИзФайла.Выгрузить(,"ЕдиницаИзмеренияСтрокой");
	ТЗ.Свернуть("ЕдиницаИзмеренияСтрокой");
	
	ТЗ2 = Объект.СоответствиеЕдиницИзмерений.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТЗ.ЕдиницаИзмеренияСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ2.ЕдиницаИзмеренияСтрокой,
	|	ТЗ2.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ТЗ2
	|ИЗ
	|	&ТЗ2 КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ПО УпаковкиЕдиницыИзмерения.Наименование = ВТ_ТЗ.ЕдиницаИзмеренияСтрокой
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.ЕдиницаИзмеренияСтрокой,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТЗ2.ЕдиницаИзмеренияСтрокой,
	|	ВТ_ТЗ2.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ТЗ2 КАК ВТ_ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой,
	|	МАКСИМУМ(ВТ_ТЗ_Объединенное.ЕдиницаИзмерения) КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
	|ИЗ
	|	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ_Объединенное.ЕдиницаИзмеренияСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения = ЗНАЧЕНИЕ(СПРАВОЧНИК.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмерения
	|		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
	|	КОНЕЦ КАК ЕдиницаИзмерения
	|ИЗ
	|	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
	|		ПО ВТ_ПодобранныеПоНаименованию.ЕдиницаИзмеренияСтрокой = ВТ_ПодготовленныйИзЗагрузки.ЕдиницаИзмеренияСтрокой");
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	
	Объект.СоответствиеЕдиницИзмерений.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьДанныеСоответствияПоНоменклатуре()
	
	ТЗ = Объект.ТЧМатериалыИзФайла.Выгрузить(,"НоменклатураСтрокой");
	ТЗ.Свернуть("НоменклатураСтрокой");
	
	ТЗ2 = Объект.СоответствиеПоНоменклатуре.Выгрузить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТЗ.НоменклатураСтрокой
	|ПОМЕСТИТЬ ВТ_ТЗ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ2.НоменклатураСтрокой,
	|	ТЗ2.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ТЗ2
	|ИЗ
	|	&ТЗ2 КАК ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.НоменклатураСтрокой,
	|	МАКСИМУМ(Номенклатура.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПодобранныеПоНаименованию
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО Номенклатура.Наименование = ВТ_ТЗ.НоменклатураСтрокой
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ.НоменклатураСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ.НоменклатураСтрокой,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ТЗ_Объединенное
	|ИЗ
	|	ВТ_ТЗ КАК ВТ_ТЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТЗ2.НоменклатураСтрокой,
	|	ВТ_ТЗ2.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВТ_ТЗ2 КАК ВТ_ТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТЗ_Объединенное.НоменклатураСтрокой,
	|	МАКСИМУМ(ВТ_ТЗ_Объединенное.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ПодготовленныйИзЗагрузки
	|ИЗ
	|	ВТ_ТЗ_Объединенное КАК ВТ_ТЗ_Объединенное
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТЗ_Объединенное.НоменклатураСтрокой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ПодготовленныйИзЗагрузки.Номенклатура = ЗНАЧЕНИЕ(СПРАВОЧНИК.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТ_ПодготовленныйИзЗагрузки.Номенклатура
	|		ИНАЧЕ ВТ_ПодобранныеПоНаименованию.Ссылка
	|	КОНЕЦ КАК Номенклатура
	|ИЗ
	|	ВТ_ПодготовленныйИзЗагрузки КАК ВТ_ПодготовленныйИзЗагрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодобранныеПоНаименованию КАК ВТ_ПодобранныеПоНаименованию
	|		ПО ВТ_ПодобранныеПоНаименованию.НоменклатураСтрокой = ВТ_ПодготовленныйИзЗагрузки.НоменклатураСтрокой");
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ТЗ2", ТЗ2);
	
	Объект.СоответствиеПоНоменклатуре.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Результат = ХранилищеСистемныхНастроек.Загрузить( "ЗагрузкаНачальныхДанных", "СоответствиеЕдиницИзмерений");
	Если НЕ Результат = Неопределено Тогда 
		Объект.СоответствиеЕдиницИзмерений.Загрузить(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	ХранилищеСистемныхНастроек.Сохранить( "ЗагрузкаНачальныхДанных", "СоответствиеЕдиницИзмерений", Объект.СоответствиеЕдиницИзмерений.Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура НазваниеФайлаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

